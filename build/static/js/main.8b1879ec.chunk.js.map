{"version":3,"sources":["assets/img/professor.svg","assets/img/prof_female.svg","assets/img/logo_ufal_.png","assets/img/nees.png","../node_modules/typescript/lib sync","registerServiceWorker.js","components/HelpIcon/HelpIcon.jsx","components/Dropdown/Dropdown.jsx","views/ClassDashboard/DescripitiveData/StudentsRegistered.jsx","views/ClassDashboard/DescripitiveData/SubjectDomain.jsx","views/ClassDashboard/DescripitiveData/MinimumPercentage.jsx","views/ClassDashboard/Chart/ResourcesChart/ResourcesChart.jsx","views/ClassDashboard/Chart/ReachStatisticsChart/ReachStatisticsChart.jsx","views/ClassDashboard/Chart/PerformanceChart/PerformanceChart.jsx","views/ClassDashboard/Dashboard_1/ClassInfo.jsx","views/ClassDashboard/DescripitiveData/AverageStudentsPoints.jsx","views/ClassDashboard/Chart/LevelChart/LevelChart.jsx","views/ClassDashboard/Chart/MissionChart/MissionChart.jsx","views/ClassDashboard/Dashboard_2/ClassInfo.jsx","views/ClassDashboard/Dashboard_3/ClassInfo.jsx","views/ClassDashboard/Curriculum.jsx","views/ClassDashboard/Dashboard_1/ClassDashboard.jsx","views/ClassDashboard/Dashboard_2/ClassDashboard.jsx","views/ClassDashboard/Dashboard_3/ClassDashboard.jsx","routes.jsx","components/Sidebar/Sidebar.jsx","components/Navbars/DemoNavbar.jsx","layouts/Admin.jsx","views/Terms/components/Header.jsx","views/Terms/StarterTerm.jsx","views/PopUp.js","views/Terms/components/Checkbox.jsx","views/Terms/components/TextArea.jsx","views/Terms/DemographicQuests.jsx","views/Terms/Thanks.jsx","views/Terms/ProjectTutorial.jsx","views/Terms/components/LargeTextArea.jsx","views/Terms/DashboardQuestions.jsx","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","HelpIcon","toggle","setState","isOn","this","props","icon","help","color","Fragment","className","style","Tooltip","isOpen","placement","target","fontSize","React","Component","Dropdown","toggleCollapse","updateCollapse","isOpenCollapse","updateRotate","rotate","content","contentchild","title","Card","tag","CardHeader","CardTitle","ButtonGroup","Col","onClick","cursor","CardBody","borderTop","opacity","margin","Collapse","xs","CardFooter","baseUrl","process","REACT_APP_API_URL","StudentsRegistered","cancelTokenSource","axios","CancelToken","source","totalStudents","courseId","classroomId","url","get","cancelToken","token","res","data","count","alert","isCancel","cancel","Row","md","SubjectDomain","Date","curriculumId","Date_Values","startDate","replace","endDate","getDate","getMonth","StudentsReachedPercentage","quant","ResourcesChart","chartOptions","chart","type","text","xAxis","categories","labels","useHTML","formatter","pos","value","yAxis","min","tooltip","pointFormat","shared","plotOptions","column","stacking","series","name","Render","resource_data","url_quantbyresource","url_allresources","url_totalstudents","url_correctlyanswered","all","spread","quantresource","allresources","manystudents","correctlyanswered","interactionresources","allresources_data","totalofstudents","correctlyanswered_data","length","i","position","findIndex","x","resource_id","position_resource_id","problem_id","unsuccessfully_interaction","quantAnsweredCorrectly","map","resource_type","fetchData","prevProps","highcharts","Highcharts","options","index","document","getElementById","UncontrolledTooltip","key","includes","titleProblems","titleResources","TableHead","columns","resources","resource","scope","textAlign","TableBody","rows","students","student","students_interaction","status_problems","verticalAlign","current_interaction","find","element","user_id","correctly_done","ResourcesChartChild","url_students","url_students_interaction","url_resources","url_status_problems","students_data","students_interaction_data","resources_data","status_problems_data","unshift","maxHeight","teacherId","ReachStatisticsChart","height","lineColor","enabled","tickInterval","gridLineColor","legend","reversed","visible","pointWidth","groupPadding","borderRadius","url_studentsreached","reached","total","ReachStatisticsChild","Update","UpdateClass","isOpenClass","studentsnotreached","studentsreached","url_allstudents","Res1","Res2","data_allstudents","data_studentsreached","filterdata_notreached","filter","some","el","Nav","tabs","NavItem","NavLink","paddingLeft","sm","PerformanceChart","max","point","y","credits","marker","pointPadding","borderWidth","line","dataLabels","lineWidth","format","start","end","startExpectedDate","endExpectedDate","cumulativeAvg","dateArray","expectedArray","cumulativeArray","currentDate","position_cumulative","push","string","date","lastdate","DATE","getTime","Math","round","cumulativeAverage","setDate","url_percentage","url_date","url_interaction","url_cumulativeAvg","url_getMissionInfo","minPercentage","interaction","getMissionInfo","expectedStartDate","expectedEndDate","firstInteraction","lastInteraction","percentage","missions_for_render","DateArray","getDateArray","current_date","position_inarray","dashStyle","nameMission","radius","Array","fill","ClassInfo","optionSelected","lg","MinimumPercentage","to","pathname","DashboardID","marginBottom","AverageStudentsPoints","Average","currentPoints","parseInt","LevelChart","url_studentsbylevel","studentsbylevel","inlevel","outoflevel","level_","j","LevelChartChild","url_studentsByLevel","newdata","MissionChart","missionInfo","url_missionInfo","url_missionStatus","missionStatus","data_names","achieved_missions","notAchieved_missions","notAttempted_missions","missionInfo_data","missionStatus_data","states_missions","missionId","ID","studentStatus","date_string","convert_date","awardPoints","awardGrade","MissionChartChild","opt","Missions_info","Class","status","IsOpen","Mission_Students","url_missionStudents","missionStudents","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","DropdownItem","Container","fluid","data_student","userId","userName","styleSelect","option","styles","isDisabled","isFocused","isSelected","backgroundColor","selected","focus","Curriculum","handleChange","selectedOption","curriculum","dashboard","URL","renderDate","FormGroup","Label","for","alignItems","size","padding","placeholder","onChange","label","ClassDashboard","render","participant_info","JSON","parse","sessionStorage","getItem","dashboard_sequence","indexOf","paddingBottom","params","routes","path","component","ClassDashboard_1","layout","ClassDashboard_2","ClassDashboard_3","ps","Header","dropdownOpen","bind","dropdownToggle","sidebarToggle","createRef","brandName","prop","href","documentElement","classList","current","innerWidth","addEventListener","updateColor","history","Navbar","expand","Sidebar","activeRoute","sidebar","routeName","platform","PerfectScrollbar","suppressScrollX","suppressScrollY","destroy","data-color","data-active-color","activeColor","gender","src","prof_female","alt","prof_male","ref","Dashboard","handleActiveClick","handleBgClick","accepted","mainPanel","body","action","scrollTop","scrollingElement","bgColor","DemoNavbar","logo_nees","align","width","hspace","logo_ufal","StarterTerm","terms","checkValid","handleCheckbox","clear","prevState","setItem","offset","fontFamily","Input","accept","Button","disabled","PopUp","showMessage","msg","Swal","fire","timer","confirmButtonText","CheckBox","htmlFor","display","displaystyle","checked","selectedOptions","TextArea","fontWeight","cols","FormContainer","participant","age","educational_level","technical_level","failed","redirect","age_valid","gender_valid","educational_level_valid","technical_level_valid","state_valid","formErrors","formValid","technical_level_options","ageOptions","genderOptions","educational_levelOptions","handleTextArea","handleCheckBoxAge","handleCheckBoxGender","handleCheckBoxTechnicalLevel","handleCheckBoxEducacationalLevel","validateField","fieldName","fieldValidationErrors","validateForm","participant_id","dashboard_perm","perm","stringify","Form","Checkbox","span","Thanks","post","resp","survey","promise","method","responses","forEach","flexDirection","justifyContent","ProjectTutorial","_onReady","event","pauseVideo","YouTube","videoId","opts","playerVars","autoplay","LargeTextArea","DashboardQuestions","questionAnswers","q1","q2","q3","q4","q5","q6","q7","q8","q9","openQuestion1","openQuestion2","survey_type","credibility","possibleOptions","surveyName","splice","q1AnswerValid","q1Valid","q2AnswerValid","q2Valid","q3AnswerValid","q3Valid","q4AnswerValid","q4Valid","q5AnswerValid","q5Valid","q6AnswerValid","q6Valid","q7AnswerValid","q7Valid","q8AnswerValid","q8Valid","q9AnswerValid","q9Valid","ReactDOM","exact","DemographicQuests","Admin","origin","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8b1879ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/professor.4038e72c.svg\";","module.exports = __webpack_public_path__ + \"static/media/prof_female.fcb072ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_ufal_.30e1ad89.png\";","module.exports = __webpack_public_path__ + \"static/media/nees.0029635c.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 359;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from \"react\";\n\nimport { Tooltip } from \"reactstrap\";\n\n/* \n    * Tooltip component using icon\n    *\n    * @version 0.1\n*/\nclass HelpIcon extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            isOn: false\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            isOn: !this.state.isOn\n        })\n    }\n\n    render(){\n        const { id, icon, help, color } = this.props;\n        const { isOn } = this.state;\n        return(\n            <React.Fragment>\n                <div>\n                    <i className={ icon } id = {\"Popover-\" + id} style = {{ color: color ? color : \"grey\" }}/>\n                    <Tooltip isOpen={ isOn } toggle={ () => this.toggle() } placement=\"top-end\" target={\"Popover-\" + id} style = {{ fontSize: \"0.85em\" }}>\n                        { help }\n                    </Tooltip>    \n                </div>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default HelpIcon;","import React from \"react\";\r\n\r\nimport {\r\nCollapse,\r\nCard,\r\nCardHeader,\r\nCardBody,\r\nCardFooter,\r\nCardTitle,\r\nButtonGroup,\r\nCol\r\n} from \"reactstrap\";\r\n\r\nimport HelpIcon from \"../HelpIcon/HelpIcon.jsx\"\r\n\r\n/* \r\n    * Component Dropdown\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass Dropdown extends React.Component {\r\nconstructor() {\r\n    super()\r\n    this.state = {\r\n        // Variables for control the Collapse\r\n        isOpenCollapse: [true, false],\r\n        rotate: [\"up\", \"down\"]\r\n    }\r\n}\r\n    \r\n// Open and close Collapse\r\ntoggleCollapse = (id) => { \r\n    let updateCollapse = this.state.isOpenCollapse;\r\n    let updateRotate = this.state.rotate;\r\n    updateCollapse[id] = !updateCollapse[id];\r\n    updateRotate[id] = (updateRotate[id] === \"fa-rotate-180\") ? \"\" : \"fa-rotate-180\";\r\n    this.setState({\r\n        isOpenCollapse: updateCollapse,\r\n        rotate: updateRotate\r\n    })\r\n}\r\n\r\nrender(){\r\n    const { rotate, isOpenCollapse } = this.state;\r\n    const { content, contentchild, title } = this.props;\r\n    return(\r\n    <Card tag = \"h5\">\r\n        <CardHeader>\r\n            <CardTitle>\r\n            <div className = \"d-flex justify-content-end mx-3\"> \r\n                <div className = \"mr-auto p-2\">\r\n                    { title }\r\n                </div>\r\n                <div className = \"p-2\">\r\n                    <ButtonGroup>\r\n                    <Col><i onClick={ () => this.toggleCollapse(0) } className = { \"fa fa-chevron-down fa-sm \" + rotate[0] } style = {{ color: \"grey\", cursor: \"pointer\" }}/></Col>\r\n                    <Col><HelpIcon {...this.props}/></Col>\r\n                    </ButtonGroup>\r\n                </div>  \r\n            </div>\r\n            </CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n            <div style = {{ borderTop: \"0.1em solid grey\", opacity: \"0.3\", margin: \"0 1em 1em 1em\" }}/>\r\n            <Collapse isOpen = { isOpenCollapse[0] }>\r\n                <div className = \"d-flex justify-content-center align-items-center\" style = {{ margin: \"0 1em 0 1em\" }}>\r\n                    <Col>{ content }</Col>\r\n                    <Col xs=\"auto\"><i onClick={ () => this.toggleCollapse(1) } className = { \"fa fa-chevron-down fa-lg \" + rotate[1] } style = {{ color: \"grey\", cursor: \"pointer\" }}/></Col>\r\n                </div>\r\n            </Collapse>\r\n            <Collapse isOpen = { isOpenCollapse[1] && isOpenCollapse[0] }>\r\n            {contentchild && <div style = {{ margin: \"1em 0 1em 0\" }}/>}\r\n                <div style = {{ margin: \"0 1em 0 1em\" }}>\r\n                    { contentchild }\r\n                </div>\r\n            </Collapse>\r\n        </CardBody>\r\n        <CardFooter>\r\n        </CardFooter>\r\n    </Card>\r\n    );\r\n}\r\n};\r\n\r\nexport default Dropdown;","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\nclass StudentsRegistered extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            totalStudents: '' \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const courseId = this.props.courseId;\r\n        const classroomId = this.props.classroomId;\r\n        const url = baseUrl+\"/course/totalStudents/\"+courseId+\"/\"+classroomId\r\n        axios.get(url, { cancelToken: this.cancelTokenSource.token })\r\n        .then(res=>{\r\n          if (res.data) {\r\n            this.setState({\r\n                totalStudents: res.data[0].count\r\n            });\r\n          }\r\n          else {\r\n            alert(\"Error web service\");\r\n          }\r\n        })\r\n        .catch(error=>{\r\n          //alert(\"Error server \"+error);\r\n          if (axios.isCancel(error)) {\r\n            console.log('Request canceled');\r\n          } else {\r\n              console.log(\"Error server \" + error);\r\n          }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <Card className=\"card-stats\">\r\n            <CardBody>\r\n              <Row>\r\n                <Col md=\"4\" xs=\"5\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"fas fa-users\"/>\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"8\" xs=\"5\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Número de alunos matriculados nesta disciplina</p>\r\n                    <p> </p>\r\n                    <div style={{ fontSize: 45 }}>\r\n                        <CardTitle tag=\"p\">{this.state.totalStudents}</CardTitle>\r\n                    </div>    \r\n                    <p />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n            <CardFooter>\r\n            </CardFooter>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentsRegistered;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\nclass SubjectDomain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            Date: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const courseId = this.props.courseId;\r\n        const curriculumId = this.props.curriculumId;\r\n        const classroomId = this.props.classroomId;\r\n\r\n        const url = baseUrl + \"/course/getExpectedDate/\" + curriculumId + \"/\" + courseId + \"/\" + classroomId;\r\n\r\n        axios.get(url, { cancelToken: this.cancelTokenSource.token })\r\n            .then(res => {\r\n                if (res.data) {\r\n                    const Date_Values = res.data[0];\r\n\r\n                    let startDate = new Date(Date_Values.startDate.replace(/-/g, '/'));\r\n                    let endDate = new Date(Date_Values.endDate.replace(/-/g, '/'));\r\n\r\n                    this.setState({\r\n                        Date: startDate.getDate() + \"/\" + (startDate.getMonth() + 1) + \" a \" + endDate.getDate() + \"/\" + (endDate.getMonth() + 1)\r\n                    });\r\n                } else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                //alert(\"Error server \" + error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { Date } = this.state;\r\n        return (\r\n            <Card className=\"card-stats\">\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md=\"3\" xs=\"5\">\r\n                            <div className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"fas fa-video\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"9\" xs=\"5\">\r\n                            <div className=\"numbers\">\r\n                                <p className=\"card-category\">Período previsto para o Domínio desse assunto</p>\r\n                                <div style={{ fontSize: 45 }}>\r\n                                    <CardTitle tag=\"p\">{Date}</CardTitle>\r\n                                </div>\r\n                                <p />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                </CardFooter>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SubjectDomain;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\nclass StudentsReachedPercentage extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            totalStudents: '' \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const curriculumId = this.props.curriculumId;\r\n        const classroomId = this.props.classroomId;\r\n        const url = baseUrl+\"/course/getNumbersStudentsReachedPercentage/\"+classroomId+\"/\"+curriculumId\r\n        axios.get(url, { cancelToken: this.cancelTokenSource.token })\r\n        .then(res=>{\r\n          if (res.data) {\r\n            this.setState({\r\n                totalStudents: res.data[0].quant\r\n            });\r\n          }\r\n          else {\r\n            alert(\"Error web service\");\r\n          }\r\n        })\r\n        .catch(error=>{\r\n          //alert(\"Error server \"+error);\r\n          if (axios.isCancel(error)) {\r\n            console.log('Request canceled');\r\n          } else {\r\n              console.log(\"Error server \" + error);\r\n          }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount () {\r\n      this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <Card className=\"card-stats\">\r\n            <CardBody>\r\n              <Row>\r\n                <Col md=\"4\" xs=\"5\">\r\n                  <div className=\"icon-big text-center icon-warning\">\r\n                    <i className=\"fas fa-check\" />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"8\" xs=\"5\">\r\n                  <div className=\"numbers\">\r\n                    <p className=\"card-category\">Total de alunos que alcançaram porcentagem mínima</p>\r\n                    <div style={{ fontSize: 45 }}>\r\n                        <CardTitle tag=\"p\"> {this.state.totalStudents} </CardTitle>\r\n                    </div>\r\n                    <p />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </CardBody>\r\n            <CardFooter>\r\n            </CardFooter>\r\n          </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentsReachedPercentage;\r\n","import React from \"react\";\r\n\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\n\r\nimport axios from 'axios';\r\n//import { Link } from \"react-router-dom\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\n/* \r\n    * Component responsible for updating and rendering Class Interaction with Resources\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass ResourcesChart extends React.Component {\r\n    // construtor(props) to use this.state where the chart is built using Highcharts\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            // Chart Settings\r\n            chartOptions: {\r\n                chart: {\r\n                    type: \"column\"\r\n                },\r\n                title: {\r\n                    text: \" \"\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                    ],\r\n                    labels: {\r\n                        useHTML: true,\r\n                        formatter: function (data) {\r\n                            var tip = '<div id=\"tooltip_resources-' + data.pos + '\">' + data.value + '</div>';\r\n                            return tip;\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: \"Número de Estudantes\"\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat:\r\n                        '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.series.name}: {point.y}  ({point.percentage:.1f}%)  {point.name} </b><br/>',\r\n                    shared: true\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: \"normal\"\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"Alunos que ainda não interagiram com esse recurso\",\r\n                        //color: '#273746 ',\r\n                        color: \"#34495E \",\r\n                        data: []\r\n                    },\r\n                    {\r\n                        name: \"Alunos que não interagiram com sucesso com esse recurso\",\r\n                        //color: '#ffdc73',\r\n                        color: \"#ffdc73\",\r\n                        data: []\r\n                    },\r\n                    {\r\n                        name: \"Alunos que interagiram com sucesso com esse recurso\",\r\n                        color: \"#52bf90\",\r\n                        data: []\r\n                    }\r\n                ]\r\n            },\r\n            Render: true,\r\n            resource_data: []\r\n        }\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n        const courseId = this.props.courseId;\r\n\r\n        // Variables with url to method get \r\n        const url_quantbyresource = baseUrl + \"/course/getQuantStudentInteractionResources/\" + classroomId + \"/\" + curriculumId;\r\n        const url_allresources = baseUrl + \"/course/getResourcesByCurriculum/\" + curriculumId;\r\n        const url_totalstudents = baseUrl + \"/course/totalStudents/\" + courseId + \"/\" + classroomId;\r\n        const url_correctlyanswered = baseUrl + \"/course/getNumberStudentsCorrectlyAnsweredProblems/\" + classroomId + \"/\" + curriculumId;\r\n\r\n        axios.all([\r\n            axios.get(url_quantbyresource, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_allresources, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_totalstudents, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_correctlyanswered, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n            .then(axios.spread((quantresource, allresources, manystudents, correctlyanswered) => {\r\n                // Checks if have data\r\n                if (quantresource.data && allresources.data && manystudents.data && correctlyanswered.data) {\r\n                    var interactionresources = quantresource.data;\r\n                    var allresources_data = allresources.data;\r\n                    var totalofstudents = manystudents.data[0].count;\r\n                    var correctlyanswered_data = correctlyanswered.data;\r\n\r\n                    // Checks if have interaction with resources\r\n                    // Renders the chart only if have data in interaction resources\r\n                    if (interactionresources && interactionresources.length > 0) {\r\n                        // Loop to set values for every resource, for render in Chart\r\n                        for (let i = 0; i < allresources_data.length; i++) {\r\n                            // get position if exist of the current resource in interactions\r\n                            let position = interactionresources.findIndex(x => x.resource_id === allresources_data[i].resource_id);\r\n\r\n                            // check if is a valid position\r\n                            if (interactionresources[position]) {\r\n                                // puts the value in the array because exist the position\r\n                                allresources_data[i].quant = interactionresources[position].quant;\r\n                            } else {\r\n                                allresources_data[i].quant = 0;\r\n                            }\r\n\r\n                            // get position if exist of the current resource in correctlyanswered_data\r\n                            let position_resource_id = correctlyanswered_data.findIndex(x => x.problem_id === allresources_data[i].resource_id);\r\n\r\n                            // check if is a valid position\r\n                            if (correctlyanswered_data[position_resource_id]) {\r\n                                // puts the value of unsuccessfully interaction (interactions - successfully interaction)\r\n                                allresources_data[i].unsuccessfully_interaction = allresources_data[i].quant - correctlyanswered_data[position_resource_id].quantAnsweredCorrectly;\r\n                            } else {\r\n                                allresources_data[i].unsuccessfully_interaction = 0;\r\n                            }\r\n                        }\r\n\r\n                        this.setState({\r\n                            chartOptions: {\r\n                                xAxis: {\r\n                                    categories: allresources_data.map(x => x.resource_type)\r\n                                },\r\n                                series: [\r\n                                    { data: allresources_data.map(x => totalofstudents - x.quant) },\r\n                                    { data: allresources_data.map(x => x.unsuccessfully_interaction) },\r\n                                    { data: allresources_data.map(x => x.quant - x.unsuccessfully_interaction) }\r\n                                ]\r\n                            },\r\n                            Render: true,\r\n                            resource_data: allresources_data\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            Render: false\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            }))\r\n            .catch(error => {\r\n                //alert(\"Error server \" + error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // if change curriculum, update all data.\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { chartOptions, Render, resource_data } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {Render ? (\r\n                    <div>\r\n                        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n                        {resource_data.map((data, index) => (\r\n                            document.getElementById(\"tooltip_resources-\" + index) ? (\r\n                                <UncontrolledTooltip key={\"resourceschart-\" + data.resource_id} placement=\"bottom\" target={\"tooltip_resources-\" + index} style={{ fontSize: \"0.85em\" }}>\r\n                                    {(data['resource_type'].includes(\"problem\")) ? (\r\n                                        <div className=\"text-center\">\r\n                                            {data.titleProblems}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"text-center\">\r\n                                            {data.titleResources}\r\n                                        </div>\r\n                                    )}\r\n                                </UncontrolledTooltip>\r\n                            ) : (\r\n                                null\r\n                            )\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-center\">Nenhum estudante desta turma interagiu ainda com os recursos deste assunto</div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\n// Render the Table head with all resources\r\nconst TableHead = props => {\r\n    const columns = props.resources.map((resource, index) => {\r\n        if (index === 0) {\r\n            // Render \"Alunos\"\r\n            return (<th key={\"tb_h_resourceschart-\" + resource.resource_id} scope=\"col\">{resource}</th>);\r\n        } else {\r\n            // Render resources\r\n            return (<th key={\"tb_h_resourceschart-\" + resource.resource_id} scope=\"col\" style={{ textAlign: \"center\" }}>{resource.resource_type} {resource.resource_id}</th>);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {columns}\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\n// Render the body of the table with the students, and if each of them interacted with the resources\r\nconst TableBody = props => {\r\n\r\n\r\n    // Render the columns\r\n    const columns = (student, students_interaction, resource, status_problems) => resource.map((resource, index) => {\r\n        if (index === 0) {\r\n            // Render student name\r\n            return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id}><i className=\"far fa-user-circle fa-2x\" style={{ verticalAlign: \"middle\", margin: \"0 0.5em 0 0\" }}/>{student.name}</td>);\r\n        } else {\r\n            // Render if interacted with the resources\r\n            // check if the student interacted\r\n            let current_interaction = students_interaction.find(element => (element.name === student.name) && (element.resource_id === resource.resource_id));\r\n\r\n            // if interacted Render green or yellow dot\r\n            if (resource.resource_type === 'problem') {\r\n                // let current_interaction_problem = status_problems.find(element => (element.user_id === student.id) && (element.problem_id === resource.resource_id) && (element.correctly_done.data[0] === 1));\r\n                if (status_problems.find(element => (element.user_id === student.id) && (element.problem_id === resource.resource_id) && (element.correctly_done.data[0] === 1))) {\r\n                    return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id} style={{ textAlign: \"center\" }}><i className=\"fas fa-circle fa-2x\" style={{ color: \"#52bf90\" }}></i></td>);\r\n                } else if (status_problems.find(element => (element.user_id === student.id) && (element.problem_id === resource.resource_id) && (element.correctly_done.data[0] === 0))) {\r\n                    return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id} style={{ textAlign: \"center\" }}><i className=\"fas fa-circle fa-2x\" style={{ color: \"#ffdc73\" }}></i></td>);\r\n                } else {\r\n                    return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id} style={{ textAlign: \"center\" }}><i className=\"fas fa-circle fa-2x\" style={{ color: \"#34495E\" }}></i></td>);\r\n                }\r\n            } else if (current_interaction) {\r\n                return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id} style={{ textAlign: \"center\" }}><i className=\"fas fa-circle fa-2x\" style={{ color: \"#52bf90\" }}></i></td>);\r\n            } else {\r\n                return (<td key={\"tb_b_c_resourceschart-\" + resource.resource_id} style={{ textAlign: \"center\" }}><i className=\"fas fa-circle fa-2x\" style={{ color: \"#34495E\" }}></i></td>);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Render the rows\r\n    const rows = props.students.map((student, index) => {\r\n        return (\r\n            <tr key={\"tb_b_r_resourceschart-\" + student.id}>\r\n                {columns(student, props.students_interaction, props.resources, props.status_problems)}\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <tbody>{rows}</tbody>\r\n    );\r\n}\r\n\r\n/* \r\n    * Component responsible for updating and rendering Class Interaction with Resources Child\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass ResourcesChartChild extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            students: [],\r\n            students_interaction: [],\r\n            resources: [],\r\n            status_problems: [],\r\n            Render: true\r\n        }\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const courseId = this.props.courseId;\r\n        const classroomId = this.props.classroomId;\r\n\r\n        // Variables with url to method get \r\n        const url_students = baseUrl + \"/course/getStudents/\" + courseId + \"/\" + classroomId;\r\n        const url_students_interaction = baseUrl + \"/course/getStudentsInteractionResources/\" + curriculumId + \"/\" + classroomId;\r\n        const url_resources = baseUrl + \"/course/getResourcesByCurriculum/\" + curriculumId;\r\n        const url_status_problems = baseUrl + \"/course/getClassStatusProblems/\" + classroomId + \"/\" + curriculumId;\r\n\r\n        axios.all([\r\n            axios.get(url_students, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_students_interaction, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_resources, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_status_problems, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n            .then(axios.spread((students, students_interaction, resources, status_problems) => {\r\n                // Checks if have data\r\n                if (students.data && students_interaction.data && resources.data && status_problems.data) {\r\n                    const students_data = students.data;\r\n                    const students_interaction_data = students_interaction.data;\r\n                    const resources_data = resources.data;\r\n                    const status_problems_data = status_problems.data;\r\n\r\n                    // Checks if have interaction with resources\r\n                    // Renders the students only if have data in interaction resources\r\n                    if (students_interaction_data && students_interaction_data.length > 0) {\r\n                        // Add at the beginning of the table the word \"Alunos\"\r\n                        resources_data.unshift(\"Alunos\");\r\n\r\n                        // Render students\r\n                        this.setState({\r\n                            students: students_data,\r\n                            students_interaction: students_interaction_data,\r\n                            resources: resources_data,\r\n                            status_problems: status_problems_data,\r\n                            Render: true\r\n                        });\r\n                    } else {\r\n                        // Don't render students\r\n                        this.setState({\r\n                            Render: false\r\n                        });\r\n                    }\r\n                } else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            }))\r\n            .catch(error => {\r\n                //alert(\"Error server \" + error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { resources, students, students_interaction, status_problems, Render } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {Render ? (\r\n                    <div className=\"overflow-auto\" style={{ maxHeight: \"15em\", fontSize: \"0.6em\" }}>\r\n                        <table className=\"table\">\r\n                            <TableHead resources={resources} />\r\n                            <TableBody students={students} resources={resources} students_interaction={students_interaction} status_problems={status_problems} classroomId={this.props.classroomId} teacherId={this.props.teacherId} courseId={this.props.courseId}/>\r\n                        </table>\r\n                    </div>\r\n                ) : (\r\n                        <div className=\"text-center\">Sem dados de interação</div>\r\n                    )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport { ResourcesChart, ResourcesChartChild };","import React from \"react\";\r\n\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Collapse,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\n//import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL  || \"http://localhost:4000\";\r\n\r\n/* \r\n    * Component responsible for updating and rendering Minimum Percent Range\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass ReachStatisticsChart extends React.Component {\r\n    // construtor(props) to use this.state where the chart is built using Highcharts\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            // Chart Settings\r\n            chartOptions: {\r\n                chart: {\r\n                    type: \"bar\",\r\n                    height: 150\r\n                },\r\n                title: {\r\n                    text: \" \"\r\n                },\r\n                xAxis: {\r\n                    lineColor: \"transparent\",\r\n                    categories: [\"\"],\r\n                    labels: {\r\n                        enabled: false,\r\n                        tickInterval: 2\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: \" \"\r\n                    },\r\n                    gridLineColor: \"transparent\",\r\n                    labels: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat:\r\n                        '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> estudantes ({point.percentage:.0f}%)<br/>',\r\n                    shared: false\r\n                },\r\n                legend: {\r\n                    reversed: true\r\n                },\r\n                plotOptions: {\r\n                    visible: false,\r\n                    series: {\r\n                        stacking: \"normal\",\r\n                        pointWidth: 35,\r\n                        groupPadding: 0.1\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"Alunos que não atingiram a porcentagem mínima\",\r\n                        data: [],\r\n                        color: \"#34495E \",\r\n                        borderRadius: 2\r\n                    },\r\n                    {\r\n                        name: \"Alunos que atingiram a porcentagem mínima\",\r\n                        data: [],\r\n                        borderRadius: 2,\r\n                        color: \"#52bf90\"\r\n                    }\r\n                ]\r\n            },\r\n        }\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n        const courseId = this.props.courseId;\r\n\r\n        // Variables with url to method get \r\n        const url_studentsreached = baseUrl + \"/course/getNumbersStudentsReachedPercentage/\" + classroomId + \"/\" + curriculumId;\r\n        const url_totalstudents = baseUrl + \"/course/totalStudents/\" + courseId + \"/\" + classroomId;\r\n\r\n        axios.all([\r\n            axios.get(url_studentsreached, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_totalstudents, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n            .then(axios.spread((reached, total) => {\r\n                // Checks if have data\r\n                if (reached.data && total.data) {\r\n                    this.setState({\r\n                        chartOptions: {\r\n                            series: [\r\n                                { data: [total.data[0].count - reached.data[0].quant] },\r\n                                { data: [reached.data[0].quant] }\r\n                            ]\r\n                        }\r\n                    });\r\n                } else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            }))\r\n            .catch(error => {\r\n                //alert(\"Error server \"+error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { chartOptions } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n/* \r\n    * Component responsible for updating and rendering Minimum Percent Range Childe\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass ReachStatisticsChild extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            studentsnotreached: [],\r\n            studentsreached: [],\r\n            isOpen: [true, false],\r\n            isOpenClass: [\"active\", \"\"]\r\n        }\r\n    }\r\n\r\n    toggleCollapse = (id) => {\r\n        let Update = [false, false];\r\n        let UpdateClass = [\"\", \"\"];\r\n\r\n        UpdateClass[id] = \"active\";\r\n        Update[id] = true;\r\n        \r\n        this.setState({\r\n            isOpen: Update,\r\n            isOpenClass: UpdateClass\r\n        })\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const courseId = this.props.courseId;\r\n        const classroomId = this.props.classroomId;\r\n\r\n        // Variables with url to method get \r\n        const url_allstudents = baseUrl + \"/course/getStudents/\" + courseId + \"/\" + classroomId\r\n        const url_studentsreached = baseUrl + \"/course/getStudentsReachedPercentage/\" + classroomId + \"/\" + curriculumId;\r\n\r\n        axios.all([\r\n            axios.get(url_allstudents, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_studentsreached, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n            .then(axios.spread((Res1, Res2) => {\r\n                // Checks if have data\r\n                if (Res1.data && Res2.data) {\r\n                    let data_allstudents = Res1.data;\r\n                    let data_studentsreached = Res2.data;\r\n\r\n                    // with the filter it is possible to know how many students did not reach based on the total\r\n                    let filterdata_notreached = data_allstudents.filter(x => !data_studentsreached.some(el => el['user_id'] === x.id));\r\n\r\n                    this.setState({\r\n                        studentsnotreached: filterdata_notreached,\r\n                        studentsreached: data_studentsreached\r\n                    });\r\n                } else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            }))\r\n            .catch(error => {\r\n                //alert(\"Error server \"+error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { studentsnotreached, studentsreached, isOpen, isOpenClass } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Nav tabs className=\"d-flex justify-content-around\" style={{ fontSize: \"0.85em\" }}>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[0]} onClick={() => this.toggleCollapse(0)} style={{ cursor: \"pointer\" }}>\r\n                            Alunos que alcançaram\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[1]} onClick={() => this.toggleCollapse(1)} style={{ cursor: \"pointer\" }}>\r\n                            Alunos que não alcançaram\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <Collapse isOpen={isOpen[0]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(studentsreached && studentsreached.length > 0) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {studentsreached.map(data => (\r\n                                    <Col sm=\"2\" key={data.user_id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Nenhum aluno alcançou a porcentagem mínima</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n                <Collapse isOpen={isOpen[1]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                            {studentsnotreached.map(data => (\r\n                                <Col sm=\"2\" key={data.id}>\r\n                                    <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                        <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                        <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                            {data.name}\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </Col>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport { ReachStatisticsChart, ReachStatisticsChild };","import React from \"react\";\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport axios from 'axios';\n\nimport { Col } from \"reactstrap\";\n\nconst baseUrl = process.env.REACT_APP_API_URL  || \"http://localhost:4000\";\n\n/* \n    * Component responsible for updating and rendering Class Interaction Progress with Resources \n    *\n    * @version 0.1\n*/\nclass PerformanceChart extends React.Component {\n    // Construtor(props) to use this.state where the chart is built using Highcharts\n    constructor(props) {\n        super(props);\n        this.cancelTokenSource = new axios.CancelToken.source();\n        this.state = {\n            // Chart Settings\n            chartOptions: {\n                chart: {\n                    type: \"areaspline\"\n                },\n                title: {\n                    text: \"\"\n                },\n                xAxis: {\n                    categories: []\n                },\n                yAxis: {\n                    min: 0,\n                    max: 100,\n                    tickInterval: 25,\n                    title: {\n                        text: \"\"\n                        //'Média das Porcentages de Interação da Turma com os Recursos do Assunto',\n                    },\n                    labels: {\n                        formatter: function () {\n                            return this.value + \"%\";\n                        }\n                    }\n                },\n                tooltip: {\n                    shared: false,\n                    formatter: function (tooltip) {\n                        if (\n                            this.series.name === \"Período previsto para o domínio desse assunto\"\n                        ) {\n                            return (\n                                \"<b>\" +\n                                \"<br>\" +\n                                '<span style=\"color:{series.color}\">' +\n                                this.series.name +\n                                \"</span> <b>\" +\n                                \"</b>\" +\n                                \"<br/>\"\n                            );\n                        } else {\n                            return (\n                                \"<b>\" +\n                                \"<br>\" +\n                                '<span style=\"color:{series.color}\">' +\n                                this.series.name +\n                                \"</span>: <b>\" +\n                                this.point.y +\n                                \"</b>\" +\n                                \"%\" +\n                                \"<br/>\"\n                            );\n                        }\n                    }\n                },\n                credits: {\n                    enabled: false\n                },\n                plotOptions: {\n                    series: {\n                        marker: {\n                            enabled: false\n                        }\n                    },\n                    column: {\n                        stacking: \"percent\",\n                        pointPadding: 0.2,\n                        borderWidth: 0\n                    },\n                    line: {\n                        dataLabels: {\n                            enabled: false\n                        }\n                    }\n                },\n                series: [\n                    {\n                        name: \"Porcentagem mínima necessária para avançar para o próximo assunto\",\n                        lineWidth: 3,\n                        color: \"#52bf90\",\n                        //dashStyle: 'ShortDashDot',\n                        data: []\n                    },\n                    {\n                        name: \"Porcentagem média da interação diária da turma\",\n                        dataLabels: {\n                            enabled: true,\n                            format: \"{y}%\"\n                        },\n                        lineWidth: 3,\n                        data: [],\n                        color: \"#273746\"\n                    },\n                    {\n                        name: \"Período previsto para o domínio desse assunto\",\n                        data: [],\n                        lineWidth: 7,\n                        color: \"#ffdc73\"\n                    }\n                ]\n            },\n            Render: true\n        }\n    }\n\n    /** @param start: Chart start date */\n    /** @param end: Chart end date */\n    /** @param startExpectedDate: Beginning of expected date for students to master a subject */\n    /** @param endExpectedDate: End of expected date for students to master a subject */\n    /** @param cumulativeAvg: Array with days when the class interacted with the resources of a subject */\n    /** @return returns a array with three sub-arrays, \n     * where the first is the text below the graph with the days and month, \n     * the second is the predicted period for the subject domain, \n     * and the last is the graph itself with the percentages of each day. */\n    getDateArray(start, end, startExpectedDate, endExpectedDate, cumulativeAvg) {\n        // Arrays that will be returned\n        var dateArray = [], expectedArray = [], cumulativeArray = [];\n        // Loop Variables\n        var currentDate = start, position_cumulative = 0;\n\n        // Interaction with each day of the date range\n        while (currentDate <= end) {\n            // Pushes a string into each array in day / month format and the Date\n            dateArray.push({ string: currentDate.getDate() + \"/\" + (currentDate.getMonth() + 1), date: new Date(currentDate) });\n\n            // Check if array is empty in position \"i\"\n            if (cumulativeAvg[position_cumulative] && cumulativeAvg.length > 0) {\n                // Creates a date variable for the last interaction day\n                let lastdate = new Date(cumulativeAvg[cumulativeAvg.length - 1].DATE.replace(/-/g, '/'));\n                // Creates a date variable for the current interaction day\n                let currentDateCumulative = new Date(cumulativeAvg[position_cumulative].DATE.replace(/-/g, '/'))\n\n                // If interacted on the current day, then add the percentage in the array to be returned: cumulativeArray\n                if (currentDateCumulative.getTime() === currentDate.getTime()) {\n                    // Pushes on array the current percentage\n                    cumulativeArray.push(Math.round(cumulativeAvg[position_cumulative].cumulativeAverage * 100) / 100);\n                    position_cumulative++;\n                    // If not interacted, put the previous value in the array\n                } else if (lastdate.getTime() >= currentDate.getTime()) {\n                    if (cumulativeArray[cumulativeArray.length - 1]) {\n                        // Pushes on array the previous percentage\n                        cumulativeArray.push(cumulativeArray[cumulativeArray.length - 1]);\n                    } else {\n                        // Pushes array zero if no previous percentage\n                        cumulativeArray.push(0);\n                    }\n                }\n            }\n\n            // If there is a start and end date, a zero is placed at\n            if (startExpectedDate && endExpectedDate) {\n                if ((currentDate.getTime() >= startExpectedDate.getTime() && currentDate.getTime() <= endExpectedDate.getTime())) {\n                    expectedArray.push(0);\n                } else {\n                    expectedArray.push(null);\n                }\n            } else {\n                expectedArray.push(null);\n            }\n\n            // Next day\n            currentDate.setDate(currentDate.getDate() + 1);\n        }\n\n        // Returns the array\n        return [dateArray, expectedArray, cumulativeArray];\n    }\n\n    fetchData(curriculumId) {\n        // Props\n        const classroomId = this.props.classroomId;\n        const courseId = this.props.courseId;\n\n        // Variables with url to method get \n        const url_percentage = baseUrl + \"/course/getMinimumPercentage/\" + curriculumId;\n        const url_date = baseUrl + \"/course/getExpectedDate/\" + curriculumId + \"/\" + courseId + \"/\" + classroomId;\n        const url_interaction = baseUrl + \"/course/getFirstLastClassInteraction/\" + classroomId + \"/\" + curriculumId;\n        const url_cumulativeAvg = baseUrl + \"/course/getCumulativeClassAverage/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\n        const url_getMissionInfo = baseUrl + \"/course/getMissionInfo/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\n\n        axios.all([\n            axios.get(url_percentage, { cancelToken: this.cancelTokenSource.token }),\n            axios.get(url_date, { cancelToken: this.cancelTokenSource.token }),\n            axios.get(url_interaction, { cancelToken: this.cancelTokenSource.token }),\n            axios.get(url_cumulativeAvg, { cancelToken: this.cancelTokenSource.token }),\n            axios.get(url_getMissionInfo, { cancelToken: this.cancelTokenSource.token })\n        ])\n        .then(axios.spread((minPercentage, date, interaction, cumulativeAvg, getMissionInfo) => {\n            // Checks if have data\n            if (minPercentage.data && date.data && interaction.data && cumulativeAvg.data && getMissionInfo.data) {\n                let percentage = 0;\n                let startDate, endDate, expectedStartDate, expectedEndDate, dateArray;\n                let firstInteraction, lastInteraction;\n                let missions_for_render = [];\n\n                // Checks if have interaction data\n                if (interaction.data[0].firstInteraction && interaction.data[0].lastInteraction) {\n                    // If it exists, add in the variables\n                    firstInteraction = new Date(interaction.data[0].firstInteraction.replace(/-/g, '/'));\n                    lastInteraction = new Date(interaction.data[0].lastInteraction.replace(/-/g, '/'));\n                }\n\n                // Checks if have for minimum interaction percentage\n                if (minPercentage.data && minPercentage.data.length > 0) {\n                    // If it exists, add in the variables\n                    percentage = minPercentage.data[0].percentage\n                }\n\n                // Checks if have start and end date of predicted period for the subject domain\n                if (date.data[0].startDate && date.data[0].endDate) {\n                    // If it exists, add in the variables\n                    startDate = new Date(date.data[0].startDate.replace(/-/g, '/'));\n                    endDate = new Date(date.data[0].endDate.replace(/-/g, '/'));\n\n                    expectedStartDate = startDate;\n                    expectedEndDate = endDate;\n\n                    if ((firstInteraction < startDate) && firstInteraction) {\n                        startDate = firstInteraction;\n                    }\n\n                    if ((lastInteraction > endDate) && lastInteraction) {\n                        endDate = lastInteraction;\n                    }\n\n                    // Renders the chart only if this information exists\n                    this.setState({\n                        Render: true\n                    })\n\n                } else {\n                    startDate = firstInteraction;\n                    endDate = lastInteraction;\n\n                    // Don't renders the chart if this information don't exists\n                    if (!(startDate && endDate)) {\n                        this.setState({\n                            Render: false\n                        })\n                    }\n                }\n\n                // Call function getDateArray()\n                dateArray = this.getDateArray(startDate, endDate, expectedStartDate, expectedEndDate, cumulativeAvg.data);\n\n                // Set sub-arrays\n                const DateArray = dateArray[0];\n                const expectedArray = dateArray[1];\n                const cumulativeArray = dateArray[2];\n\n                // Putting the missions on the chart\n                for (let i = 0; i < getMissionInfo.data.length; i++) {\n                    // Get date from current position in array\n                    let current_date = new Date(getMissionInfo.data[i].startDate.replace(/-/g, '/'));\n\n                    // Get position for rendering on chart\n                    let position_inarray = DateArray.findIndex(x => x.date.getTime() === current_date.getTime());\n\n                    // Push new mission in array to render on chart if in range of chart\n                    if (position_inarray !== -1)\n                        missions_for_render.push(\n                            {\n                                type: \"line\",\n                                dashStyle: \"ShortDashDot\",\n                                name: getMissionInfo.data[i].nameMission,\n                                lineWidth: 2.3,\n                                dataLabels: {\n                                    enabled: false\n                                },\n\n                                data: [\n                                    {\n                                        x: position_inarray,\n                                        y: 0\n                                    },\n                                    {\n                                        x: position_inarray,\n                                        y: 100\n                                    }\n                                ],\n                                marker: {\n                                    radius: 2\n                                }\n                            }\n                        );\n                }\n\n                // Assigns the information on the chart\n                this.setState({\n                    chartOptions: {\n                        xAxis: {\n                            categories: DateArray.map(x => x.string)\n                        },\n                        series: [\n                            { data: [...Array(DateArray.length).fill(percentage)] },\n                            { data: cumulativeArray },\n                            { data: expectedArray },\n                            ...missions_for_render\n                        ]\n                    }\n                });\n            }\n            else {\n                alert(\"Error web service\");\n            }\n        }))\n        .catch(error => {\n            //alert(\"Error server \" + error);\n            if (axios.isCancel(error)) {\n                console.log('Request canceled');\n            } else {\n                console.log(\"Error server \" + error);\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.fetchData(this.props.curriculumId);\n    }\n\n    componentDidUpdate(prevProps) {\n        //  If change curriculum, update all data.\n        if (this.props.curriculumId !== prevProps.curriculumId) {\n            this.fetchData(this.props.curriculumId);\n        }\n    }\n\n    componentWillUnmount () {\n        this.cancelTokenSource.cancel();\n    }\n    \n    render() {\n        const { chartOptions, Render } = this.state;\n        return (\n            <React.Fragment>\n                {Render ? (\n                    <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n                ) : (\n                    <Col>\n                        <div>A data inicial e final esperada para os alunos dominarem esse assunto não foram definidas pelo professor e nenhuma interação dos alunos com os recursos ocorreu ainda</div>\n                    </Col>\n                )}\n            </React.Fragment>\n        );\n    }\n};\n\nexport { PerformanceChart };","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  ButtonGroup,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport Dropdown from \"../../../components/Dropdown/Dropdown.jsx\";\r\nimport StudentsRegistered from \"../DescripitiveData/StudentsRegistered\";\r\nimport SubjectDomain from \"../DescripitiveData/SubjectDomain\";\r\nimport MinimumPercentage from \"../DescripitiveData/MinimumPercentage\";\r\nimport HelpIcon from \"../../../components/HelpIcon/HelpIcon.jsx\";\r\n\r\nimport { ResourcesChart, ResourcesChartChild } from \"../Chart/ResourcesChart/ResourcesChart.jsx\";\r\nimport { ReachStatisticsChart, ReachStatisticsChild } from \"../Chart/ReachStatisticsChart/ReachStatisticsChart.jsx\";\r\nimport { PerformanceChart } from \"../Chart/PerformanceChart/PerformanceChart.jsx\";\r\n\r\nclass ClassInfo extends React.Component{ \r\nrender() {\r\n  const { courseId, classroomId, curriculumId, optionSelected } = this.props;\r\n  return(\r\n    <div>\r\n      <Row>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <StudentsRegistered courseId={ courseId } classroomId={ classroomId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <SubjectDomain courseId={ courseId } classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <MinimumPercentage classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Card tag = \"h5\">\r\n            <CardHeader>\r\n              <CardTitle>\r\n                <div className = \"d-flex justify-content-end mx-3\"> \r\n                  <div className = \"mr-auto p-2\">\r\n                    <div className=\"text-center\">Progresso de Interação da Turma com os Recursos</div>\r\n                  </div>\r\n                  <div className = \"p-2\">\r\n                      <ButtonGroup>\r\n                          <Col>\r\n                            <HelpIcon id = \"1\" icon = \"fa fa-info-circle\" \r\n                            help = {\r\n                              <div className=\"text-center\">\r\n                                Este gráfico mostra o progresso \r\n                                da turma com o passar do tempo \r\n                                e o impacto das missões criadas na \r\n                                porcentagem da interação da \r\n                                turma com os recursos.\r\n                              </div>\r\n                            }/>\r\n                          </Col>\r\n                          <Col>\r\n                            { optionSelected === \"Dinâmicas\" ? (\r\n                                <HelpIcon id = \"2\" icon = \"fa fa-exclamation-triangle\" color=\"red\"\r\n                                help = {\r\n                                  <div className=\"text-center\">\r\n                                    Está faltando 2 dias para para o período previsto para o domínio deste assunto finalizar e ainda 50% dos alunos não alcançaram a porcentagem mínima de interação com os recursos. Você pode criar uma missão para motivar esses alunos.\r\n                                  </div>\r\n                                }/>\r\n                              ) : (\r\n                                <HelpIcon id = \"2\" icon = \"fa fa-exclamation-triangle\"\r\n                                help = {\r\n                                  <div className=\"text-center\">\r\n                                    Nenhum alerta para este assunto.\r\n                                  </div>\r\n                                }/>\r\n                              )\r\n                            }\r\n                          </Col>\r\n                      </ButtonGroup>\r\n                  </div>  \r\n                </div>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div style = {{ borderTop: \"0.1em solid grey\", opacity: \"0.3\", margin: \"0 0.5em 1em 0.5em\" }}></div>\r\n                <div>\r\n                  <PerformanceChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n                </div>\r\n            </CardBody>\r\n            <CardFooter>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"3\" icon = \"fa fa-info-circle\" title = \"Alcance da Porcentagem Mínima\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de alunos \r\n                que atingiram e não atingiram a porcentagem \r\n                mínima de interação com os recursos deste assunto.\r\n              </div>\r\n            }\r\n            content = {\r\n              <ReachStatisticsChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <ReachStatisticsChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"4\" icon = \"fa fa-info-circle\" title = \"Interação da Turma com os Recursos\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de alunos que \r\n                interagiram com sucesso, que não interagiram com \r\n                sucesso e alunos que não interagiram com cada recurso \r\n                adicionado pelo professor no plano de atividades deste assunto.\r\n              </div>\r\n            }\r\n            content = {\r\n              <ResourcesChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <ResourcesChartChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <center>\r\n            <NavLink className=\"text-dark\" to={{pathname: \"/dashboardQuestions\", state: {DashboardID: 1}}} > \r\n              <button type=\"button\" style={{marginBottom: '0'}} className=\"btn btn-primary\">\r\n                Avaliar o Painel\r\n              </button>\r\n            </NavLink>\r\n      </center>  \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    CardTitle,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\nclass AverageStudentsPoints extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            Average: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const classroomId = this.props.classroomId;\r\n\r\n        const url = baseUrl + \"/course/getStudentesLevel/\" + classroomId;\r\n\r\n        axios.get(url, { cancelToken: this.cancelTokenSource.token })\r\n            .then(res => {\r\n                if (res.data) {\r\n                    const data = res.data;\r\n                    let Average = 0;\r\n\r\n                    for(let i = 0; i < data.length; i++){\r\n                        Average += data[i].currentPoints;\r\n                    }\r\n\r\n                    Average /= data.length;\r\n                    Average = parseInt(Average);\r\n\r\n                    this.setState({\r\n                        Average: Average\r\n                    });\r\n                } else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                //alert(\"Error server \" + error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { Average } = this.state;\r\n        return (\r\n            <Card className=\"card-stats\">\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md=\"3\" xs=\"5\">\r\n                            <div className=\"icon-big text-center icon-warning\">\r\n                                <i className=\"fas fa-video\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"9\" xs=\"5\">\r\n                            <div className=\"numbers\">\r\n                                <p className=\"card-category\">Média aritmética da pontuação dos Alunos da Turma</p>\r\n                                <div style={{ fontSize: 45 }}>\r\n                                    <CardTitle tag=\"p\">{Average}</CardTitle>\r\n                                </div>\r\n                                <p />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n                <CardFooter>\r\n                </CardFooter>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AverageStudentsPoints;\r\n","import React from \"react\";\r\n\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n//import { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Collapse,\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\n/* \r\n    * Component responsible for updating and Class Distribution by Level\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass LevelChart extends React.Component {\r\n    // Construtor(props) to use this.state where the chart is built using Highcharts\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            // Chart Settings\r\n            chartOptions: {\r\n                chart: {\r\n                    type: \"column\"\r\n                },\r\n                title: {\r\n                    text: \" \"\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        \"Nível 1 (0-2957 XP)\",\r\n                        \"Nível 2 (2958XP-7649 XP)\",\r\n                        \"Nível 3 (7650-13566 XP)\",\r\n                        \"Nível 4 (13566-20434 XP)\",\r\n                        \"Nível 5 (20435-28078 XP)\"\r\n                    ]\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: \"Número de estudantes\"\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat:\r\n                        '<span style=\"color:{point.color}\">\\u25CF</span> <b> {point.y} alunos ({point.percentage:.1f}%)  {point.name} </b><br/>',\r\n                    shared: true\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: \"normal\"\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"Alunos que não estão nesse nível\",\r\n                        color: \"#374961\",\r\n                        data: [0, 0, 0, 0, 0]\r\n                    },\r\n                    {\r\n                        name: \"Alunos que estão nesse nível\",\r\n                        color: \"#52bf90\",\r\n                        data: [0, 0, 0, 0, 0]\r\n                    }\r\n                ]\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n\r\n        // Variable with url to method get \r\n        const url_studentsbylevel = baseUrl + \"/course/getStudentesByLevel/\" + classroomId\r\n\r\n        axios.get(url_studentsbylevel, { cancelToken: this.cancelTokenSource.token })\r\n        .then(studentsbylevel => {\r\n            // Checks if have data\r\n            if (studentsbylevel.data) {\r\n                const data = studentsbylevel.data;\r\n\r\n                let inlevel = [];\r\n                let outoflevel = [];\r\n                let total = 0;\r\n\r\n                // Loop for all five levels\r\n                for (let i = 0; i < 5; i++) {\r\n                    // Get the index\r\n                    let position = data.findIndex(x => x.level_ === (i + 1));\r\n\r\n                    // Check if have something in that position\r\n                    if (data[position]) {\r\n                        // Add in total\r\n                        total += data[position].quant;\r\n                        // Add in 'inlevel'\r\n                        inlevel[i] = data[position].quant;\r\n                    } else {\r\n                        // If not, add zero to the 'inlevel'\r\n                        inlevel[i] = 0;\r\n                    }\r\n                }\r\n\r\n                // Loop for all five levels\r\n                for (let j = 0; j < 5; j++) {\r\n                    // Add 'outlevel' based on total minus 'inlevel'\r\n                    outoflevel[j] = total - inlevel[j];\r\n                }\r\n\r\n                // set values ​​on the chart\r\n                this.setState({\r\n                    chartOptions: {\r\n                        series: [\r\n                            { data: outoflevel },\r\n                            { data: inlevel }\r\n                        ]\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                alert(\"Error web service\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            //alert(\"Error server \" + error);\r\n            if (axios.isCancel(error)) {\r\n                console.log('Request canceled');\r\n            } else {\r\n                console.log(\"Error server \" + error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { chartOptions } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\n/* \r\n    * Component responsible for updating and Class Distribution by Level Child\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass LevelChartChild extends React.Component {\r\n    // Construtor(props) to use this.state where the open and close informations of 'navbar' are updated\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            students: [[], [], [], [], []],\r\n            isOpen: [true, false, false, false, false],\r\n            isOpenClass: [\"active\", \"\", \"\", \"\", \"\"]\r\n        }\r\n    }\r\n\r\n    // Select a nav item\r\n    toggleCollapse = (id) => {\r\n        let Update = [false, false, false, false, false];\r\n        let UpdateClass = [\"\", \"\", \"\", \"\", \"\"];\r\n\r\n        UpdateClass[id] = \"active\";\r\n        Update[id] = true;\r\n        \r\n        this.setState({\r\n            isOpen: Update,\r\n            isOpenClass: UpdateClass\r\n        })\r\n    }\r\n\r\n    fetchData() {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n\r\n        // Loop for get students of all levels\r\n        for (let i = 0; i < 5; i++) {\r\n            let url_studentsByLevel = baseUrl + \"/course/getNameStudentsByLevel/\" + classroomId + \"/\" + (i + 1)\r\n            \r\n            axios.get(url_studentsByLevel, { cancelToken: this.cancelTokenSource.token })\r\n            .then(res => {\r\n                if (res.data) {\r\n                    // all data\r\n                    let data = this.state.students;\r\n                    // new data for add\r\n                    let newdata = res.data;\r\n                    \r\n                    data[i] = newdata;\r\n\r\n                    this.setState({\r\n                        students: data\r\n                    })\r\n                }\r\n                else {\r\n                    alert(\"Error web service\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                //alert(\"Error server \" + error);\r\n                if (axios.isCancel(error)) {\r\n                    console.log('Request canceled');\r\n                } else {\r\n                    console.log(\"Error server \" + error);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    render() {\r\n        const { students, isOpen, isOpenClass } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <Nav tabs className=\"d-flex justify-content-around\" style={{ fontSize: \"0.85em\" }}>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[0]} onClick={() => this.toggleCollapse(0)} style={{ cursor: \"pointer\" }}>\r\n                            Nível 1\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[1]} onClick={() => this.toggleCollapse(1)} style={{ cursor: \"pointer\" }}>\r\n                            Nível 2\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[2]} onClick={() => this.toggleCollapse(2)} style={{ cursor: \"pointer\" }}>\r\n                            Nível 3\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[3]} onClick={() => this.toggleCollapse(3)} style={{ cursor: \"pointer\" }}>\r\n                            Nível 4\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className={\"\" + isOpenClass[4]} onClick={() => this.toggleCollapse(4)} style={{ cursor: \"pointer\" }}>\r\n                            Nível 5\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <Collapse isOpen={isOpen[0]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(students[0] && students[0].length) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {students[0].map(data => (\r\n                                    <Col sm=\"2\" key={\"levelchart-\" + data.id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Não há nenhum aluno neste nível de gamificação</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n                <Collapse isOpen={isOpen[1]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(students[1] && students[1].length) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {students[1].map(data => (\r\n                                    <Col sm=\"2\" key={\"levelchart-\" + data.id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Não há nenhum aluno neste nível de gamificação</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n                <Collapse isOpen={isOpen[2]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(students[2] && students[2].length) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {students[2].map(data => (\r\n                                    <Col sm=\"2\" key={\"levelchart-\" + data.id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Não há nenhum aluno neste nível de gamificação</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n                <Collapse isOpen={isOpen[3]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(students[3] && students[3].length) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {students[3].map(data => (\r\n                                    <Col sm=\"2\" key={\"levelchart-\" + data.id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Não há nenhum aluno neste nível de gamificação</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n                <Collapse isOpen={isOpen[4]}>\r\n                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                        {(students[4] && students[4].length) ? (\r\n                            <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                {students[4].map(data => (\r\n                                    <Col sm=\"2\" key={\"levelchart-\" + data.id}>\r\n                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                {data.name}\r\n                                            </div>\r\n                                        </div>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        ) : (\r\n                            <Row>\r\n                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                    <div>Não há nenhum aluno neste nível de gamificação</div>\r\n                                </Col>\r\n                            </Row>\r\n                        )}\r\n                    </Col>\r\n                </Collapse>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport { LevelChart, LevelChartChild };","import React from \"react\";\r\n\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n//import { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n    UncontrolledTooltip,\r\n    Nav,\r\n    Collapse,\r\n    UncontrolledDropdown, \r\n    DropdownItem, \r\n    DropdownToggle, \r\n    DropdownMenu,\r\n    Row,\r\n    Col,\r\n    Container\r\n} from \"reactstrap\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\n/* \r\n    * Component responsible for updating and rendering Interaction with Missions\r\n    *\r\n    * @version 0.1\r\n*/\r\nclass MissionChart extends React.Component {\r\n    // construtor(props) to use this.state where the chart is built using Highcharts\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            // Chart Settings\r\n            chartOptions: {\r\n                chart: {\r\n                    type: \"column\"\r\n                },\r\n                title: {\r\n                    text: \" \"\r\n                },\r\n                xAxis: {\r\n                    categories: [],\r\n                    labels: {\r\n                        useHTML: true,\r\n                        formatter: function (data) {\r\n                            var tip = '<div id=\"tooltip_mission-' + data.pos + '\">' + data.value + '</div>';\r\n                            return tip;\r\n                        }\r\n                    }\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: \"Número de Estudantes\"\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat:\r\n                        '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> students ({point.percentage:.0f}%)<br/>',\r\n                    shared: true\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        stacking: \"normal\"\r\n                    }\r\n                },\r\n                series: [\r\n                    {\r\n                        name: \"Mission Alcançada\",\r\n                        color: \"#52bf90\",\r\n                        data: []\r\n                    },\r\n                    {\r\n                        name: \"Missião não Alcançada\",\r\n                        color: \"#ffdc73\",\r\n                        data: []\r\n                    },\r\n                    {\r\n                        name: \"Missão não Tentada\",\r\n                        color: \"#273746\",\r\n                        data: []\r\n                    }\r\n                ]\r\n            },\r\n            Render: true,\r\n            missionInfo: []\r\n        }\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n        const courseId = this.props.courseId;\r\n\r\n        // Variables with url to method get\r\n        const url_missionInfo = baseUrl + \"/course/getMissionInfo/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\r\n        const url_missionStatus = baseUrl + \"/course/getClassMissionStatus/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\r\n\r\n        axios.all([\r\n            axios.get(url_missionInfo, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_missionStatus, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n        .then(axios.spread((missionInfo, missionStatus) => {\r\n            // Checks if have data\r\n            if (missionInfo.data && missionStatus.data) {\r\n                const missionInfo_data = missionInfo.data;\r\n                const missionStatus_data = missionStatus.data;\r\n\r\n                // Possible states of the created missions\r\n                const states_missions = [\"achieved\", \"notAchieved\", \"notAttempted\"];\r\n\r\n                // (data_names) have names of all missions, (achieved_missions), (notAchieved_missions), (notAttempted_missions) have the data to render\r\n                var data_names = [], achieved_missions = [], notAchieved_missions = [], notAttempted_missions = [];\r\n\r\n                // Checks for interaction\r\n                if (missionStatus_data.length > 0) {\r\n                    for (let i = 0; i < missionInfo_data.length; i++) {\r\n                        // Array with all missions names\r\n                        data_names.push(missionInfo_data[i].nameMission);\r\n\r\n                        for (let j = 0; j < 3; j++) {\r\n                            let manystudents = 0;\r\n                            // Get data based in ID and States\r\n                            let element = missionStatus_data.filter(x => (x.missionId === missionInfo_data[i].ID) && (x.studentStatus === states_missions[j]));\r\n\r\n                            if (element.length > 0)\r\n                                manystudents = element[0].totalStudents;\r\n\r\n                            // Push data in arrays\r\n                            switch (j) {\r\n                                case 0:\r\n                                    achieved_missions.push(manystudents);\r\n                                    break;\r\n                                case 1:\r\n                                    notAchieved_missions.push(manystudents);\r\n                                    break;\r\n                                case 2:\r\n                                    notAttempted_missions.push(manystudents);\r\n                                    break;\r\n                                default:\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    this.setState({\r\n                        chartOptions: {\r\n                            xAxis: {\r\n                                categories: data_names\r\n                            },\r\n                            series: [\r\n                                { data: achieved_missions },\r\n                                { data: notAchieved_missions },\r\n                                { data: notAttempted_missions }\r\n                            ]\r\n                        },\r\n                        Render: true,\r\n                        missionInfo: missionInfo_data\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        Render: false\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Error web service\");\r\n            }\r\n        }))\r\n        .catch(error => {\r\n            //alert(\"Error server \" + error);\r\n            if (axios.isCancel(error)) {\r\n                console.log('Request canceled');\r\n            } else {\r\n                console.log(\"Error server \" + error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n\r\n    /** @param date_string: A date in format: yyyy-mm-dd */\r\n    /** @return returns a date in format day / month */\r\n    convert_date(date_string) {\r\n        let date = new Date(date_string.replace(/-/g, '/'));\r\n\r\n        return ((date.getDate()) + \"/\" + (date.getMonth() + 1));\r\n    }\r\n\r\n    render() {\r\n        const { chartOptions, Render, missionInfo } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                {Render ? (\r\n                    <div>\r\n                        <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n                        {missionInfo.map((data, index) => (\r\n                            <UncontrolledTooltip key={\"missionchart-\" + data.ID} placement=\"bottom\" target={\"tooltip_mission-\" + index} style={{ fontSize: \"0.85em\" }}>\r\n                                {\"Missão disponível entre \"}\r\n                                <br />\r\n                                {this.convert_date(data.startDate) + \" a \" + this.convert_date(data.endDate)}\r\n                                <br />\r\n                                {data.awardPoints !== \"null\" ? (\r\n                                    \"Recompensa da missão: \" + data.awardPoints + \" pts\"\r\n                                ) : (\r\n                                        \"Recompensa da missão: \" + data.awardGrade + \" pts\"\r\n                                    )}\r\n                            </UncontrolledTooltip>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-center\">Nenhuma missão criada pelo professor nesse assunto</div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nclass MissionChartChild extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cancelTokenSource = new axios.CancelToken.source();\r\n        this.state = {\r\n            Missions_info: [],\r\n            IsOpen: [],\r\n            Mission_Students: [],\r\n            Render: false\r\n        }\r\n    }\r\n\r\n    // Select a nav item\r\n    toggleCollapse = (id, opt) => {\r\n        // Get number of missions\r\n        const length = this.state.Missions_info.length;\r\n        // Array for update\r\n        let Update = [];\r\n\r\n        for(let i = 0; i < length; i++){\r\n            // Start array clean\r\n            Update.push([{ Class: \"\", status: false }, { Class: \"\", status: false }, { Class: \"\", status: false }]);\r\n        }\r\n\r\n        // Active element\r\n        Update[id][opt] = { Class: \"active\", status: true };\r\n\r\n        this.setState({\r\n            IsOpen: Update\r\n        });\r\n    }\r\n\r\n    fetchData(curriculumId) {\r\n        // Props\r\n        const classroomId = this.props.classroomId;\r\n        const courseId = this.props.courseId;\r\n\r\n        // Variables with url to method get\r\n        const url_missionInfo = baseUrl + \"/course/getMissionInfo/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\r\n        const url_missionStatus = baseUrl + \"/course/getClassMissionStatus/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\r\n        const url_missionStudents = baseUrl + \"/course/getStudentsMissionStatus/\" + courseId + \"/\" + classroomId + \"/\" + curriculumId;\r\n\r\n        axios.all([\r\n            axios.get(url_missionInfo, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_missionStatus, { cancelToken: this.cancelTokenSource.token }),\r\n            axios.get(url_missionStudents, { cancelToken: this.cancelTokenSource.token })\r\n        ])\r\n        .then(axios.spread((missionInfo, missionStatus, missionStudents) => {\r\n            // Checks if have data\r\n            if (missionInfo.data && missionStatus.data && missionStudents.data) {\r\n                const missionInfo_data = missionInfo.data;\r\n                const missionStatus_data = missionStatus.data;\r\n\r\n                // Array to control all Collapses\r\n                var IsOpen = []\r\n\r\n                if (missionStatus_data.length > 0) {\r\n                    for (let i = 0; i < missionInfo_data.length; i++) {\r\n                        // Starts collapses with one open\r\n                        if(i === 0){\r\n                            IsOpen.push([{ Class: \"active\", status: true }, { Class: \"\", status: false }, { Class: \"\", status: false }]);\r\n                        } else {\r\n                            IsOpen.push([{ Class: \"\", status: false }, { Class: \"\", status: false }, { Class: \"\", status: false }]);\r\n                        }\r\n                    }\r\n                    \r\n                    this.setState({\r\n                        Missions_info: missionInfo_data,\r\n                        IsOpen: IsOpen,\r\n                        Mission_Students: missionStudents.data,\r\n                        Render: true\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        Render: false\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                alert(\"Error web service\");\r\n            }\r\n        }))\r\n        .catch(error => {\r\n            //alert(\"Error server \" + error);\r\n            if (axios.isCancel(error)) {\r\n                console.log('Request canceled');\r\n            } else {\r\n                console.log(\"Error server \" + error);\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.props.curriculumId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.curriculumId !== prevProps.curriculumId) {\r\n            this.fetchData(this.props.curriculumId);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.cancelTokenSource.cancel();\r\n    }\r\n    \r\n    render() {\r\n        const { Missions_info, IsOpen, Mission_Students, Render } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                { Render ? (\r\n                    <div>\r\n                        <Nav tabs className=\"d-flex justify-content-around\" style={{ fontSize: \"0.85em\" }}>\r\n                            { Missions_info.map((data, index) => (\r\n                                <UncontrolledDropdown key={\"missionchartchild-\" + data.ID} style={{ cursor: \"pointer\" }} nav inNavbar>\r\n                                    <DropdownToggle tag=\"a\" className={\"nav-link \" + IsOpen[index][0].Class + IsOpen[index][1].Class + IsOpen[index][2].Class} nav caret>\r\n                                        { data.nameMission }\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu>\r\n                                        <DropdownItem className={\"\" + IsOpen[index][0].Class} onClick={() => this.toggleCollapse(index, 0)} style={{ cursor: \"pointer\", borderRadius: 0 }}>Alunos que alcançaram</DropdownItem>\r\n                                        <DropdownItem className={\"\" + IsOpen[index][1].Class} onClick={() => this.toggleCollapse(index, 1)} style={{ cursor: \"pointer\" }}>Alunos que não alcançaram</DropdownItem>\r\n                                        <DropdownItem className={\"\" + IsOpen[index][2].Class} onClick={() => this.toggleCollapse(index, 2)} style={{ cursor: \"pointer\" }}>Alunos que não tentaram</DropdownItem>\r\n                                    </DropdownMenu>\r\n                                </UncontrolledDropdown>\r\n                            ))}\r\n                        </Nav>\r\n                        { Missions_info.map((data, index) => (\r\n                            <Container fluid={true} style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }} key={\"missionchartchild_collapse-\" + data.ID}>\r\n                                <Collapse isOpen={ IsOpen[index][0].status } key={\"missionchartchild_collapse-\" + data.ID + \"-0\"}>\r\n                                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                                        <div>Alunos que alcançaram</div>\r\n                                        <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                            { (Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"achieved\")).length > 0) ? (\r\n                                                Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"achieved\")).map((data_student) => (\r\n                                                    <Col sm=\"2\" key={\"missionchart_child-\" + data_student.userId}>\r\n                                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                                            <i className=\"far fa-user-circle fa-3x align-self-center\"/>\r\n                                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                                {data_student.userName}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                ))\r\n                                            ) : (\r\n                                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                                    <div>Nenhum aluno nesse status</div>\r\n                                                </Col>\r\n                                            )}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Collapse>\r\n                                <Collapse isOpen={ IsOpen[index][1].status } key={\"missionchartchild_collapse-\" + data.ID + \"-1\"}>\r\n                                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                                        <div>Alunos que não alcançaram</div>\r\n                                        <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                            { (Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"notAchieved\")).length > 0) ? (\r\n                                                Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"notAchieved\")).map((data_student) => (\r\n                                                    <Col sm=\"2\" key={\"missionchart_child-\" + data_student.userId}>\r\n                                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                                {data_student.userName}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                ))\r\n                                            ) : (\r\n                                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                                    <div>Nenhum aluno nesse status</div>\r\n                                                </Col>\r\n                                            )}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Collapse>\r\n                                <Collapse isOpen={ IsOpen[index][2].status } key={\"missionchartchild_collapse-\" + data.ID + \"-2\"}>\r\n                                    <Col style={{ textAlign: \"center\", paddingLeft: \"0\" }}>\r\n                                        <div>Alunos que não tentaram</div>\r\n                                        <Row className=\"overflow-auto\" style={{ maxHeight: \"12em\" }}>\r\n                                            { (Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"notAttempted\")).length > 0) ? (\r\n                                                Mission_Students.filter(element => (element.missionId === data.ID) && (element.studentStatus === \"notAttempted\")).map((data_student) => (\r\n                                                    <Col sm=\"2\" key={\"missionchart_child-\" + data_student.userId}>\r\n                                                        <div className=\"d-flex flex-column\" style={{ margin: \"1em 0 0 0\" }}>\r\n                                                            <i className=\"far fa-user-circle fa-3x align-self-center\" />\r\n                                                            <div className=\"align-self-center\" style={{ fontSize: \"0.85em\" }}>\r\n                                                                {data_student.userName}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                ))\r\n                                            ) : (\r\n                                                <Col style={{ margin: \"1em 1em 0 1em\", textAlign: \"center\" }}>\r\n                                                    <div>Nenhum aluno nesse status</div>\r\n                                                </Col>\r\n                                            )}\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Collapse>\r\n                            </Container>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-center\">Sem dados dos estudantes</div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n};\r\n\r\nexport { MissionChart, MissionChartChild };","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport Dropdown from \"../../../components/Dropdown/Dropdown.jsx\";\r\nimport StudentsRegistered from \"../DescripitiveData/StudentsRegistered\";\r\nimport AverageStudentsPoints from \"../DescripitiveData/AverageStudentsPoints\";\r\nimport MinimumPercentage from \"../DescripitiveData/MinimumPercentage\";\r\n\r\nimport { LevelChart, LevelChartChild } from \"../Chart/LevelChart/LevelChart.jsx\";\r\nimport { ReachStatisticsChart, ReachStatisticsChild } from \"../Chart/ReachStatisticsChart/ReachStatisticsChart.jsx\";\r\nimport { MissionChart, MissionChartChild } from \"../Chart/MissionChart/MissionChart.jsx\";\r\n\r\nclass ClassInfo extends React.Component{ \r\nrender() {\r\n  const { courseId, classroomId, curriculumId } = this.props;\r\n  return(\r\n    <div>\r\n      <Row>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <StudentsRegistered courseId={ courseId } classroomId={ classroomId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <AverageStudentsPoints courseId={ courseId } classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <MinimumPercentage classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"3\" icon = \"fa fa-info-circle\" title = \"Alcance da Porcentagem Mínima\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de alunos \r\n                que atingiram e não atingiram a porcentagem \r\n                mínima de interação com os recursos deste assunto.\r\n              </div>\r\n            }\r\n            content = {\r\n              <ReachStatisticsChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <ReachStatisticsChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"5\" icon = \"fa fa-info-circle\" title = \"Distribuição da Turma por Nível\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a distribuição dos \r\n                alunos em diferente níveis. Os níveis utilizam \r\n                a pontuação conquistada pelos estudantes através \r\n                das suas interações com os recursos do sistema.\r\n              </div>\r\n            }\r\n            content = {\r\n              <LevelChart courseId={ courseId } classroomId={ classroomId }/>\r\n            }\r\n            contentchild = {\r\n              <LevelChartChild courseId={ courseId } classroomId={ classroomId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"6\" icon = \"fa fa-info-circle\" title = \"Interação com as Missões\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de \r\n                alunos que alcançaram, não alcançaram \r\n                e não tentaram alcançar cada missão criada pelo professor.\r\n              </div>\r\n            }\r\n            content = {\r\n              <MissionChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <MissionChartChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <center>\r\n            <NavLink className=\"text-dark\" to={{pathname:\"/dashboardQuestions\", state: {DashboardID: 2}}} > \r\n            <button type=\"button\" style={{marginBottom: '0'}} className=\"btn btn-primary\">\r\n              Avaliar o Painel\r\n            </button>\r\n            </NavLink>\r\n      </center>  \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  ButtonGroup,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport Dropdown from \"../../../components/Dropdown/Dropdown.jsx\";\r\nimport StudentsRegistered from \"../DescripitiveData/StudentsRegistered\";\r\nimport SubjectDomain from \"../DescripitiveData/SubjectDomain\";\r\nimport MinimumPercentage from \"../DescripitiveData/MinimumPercentage\";\r\nimport HelpIcon from \"../../../components/HelpIcon/HelpIcon.jsx\";\r\n\r\nimport { LevelChart, LevelChartChild } from \"../Chart/LevelChart/LevelChart.jsx\";\r\nimport { ResourcesChart, ResourcesChartChild } from \"../Chart/ResourcesChart/ResourcesChart.jsx\";\r\nimport { ReachStatisticsChart, ReachStatisticsChild } from \"../Chart/ReachStatisticsChart/ReachStatisticsChart.jsx\";\r\nimport { PerformanceChart } from \"../Chart/PerformanceChart/PerformanceChart.jsx\";\r\nimport { MissionChart, MissionChartChild } from \"../Chart/MissionChart/MissionChart.jsx\";\r\n\r\nclass ClassInfo extends React.Component{ \r\nrender() {\r\n  const { courseId, classroomId, curriculumId, optionSelected } = this.props;\r\n  return(\r\n    <div>\r\n      <Row>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <StudentsRegistered courseId={ courseId } classroomId={ classroomId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <SubjectDomain courseId={ courseId } classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"9\">\r\n          <MinimumPercentage classroomId={ classroomId } curriculumId={ curriculumId }/>\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Card tag = \"h5\">\r\n            <CardHeader>\r\n              <CardTitle>\r\n                <div className = \"d-flex justify-content-end mx-3\"> \r\n                  <div className = \"mr-auto p-2\">\r\n                    <div className=\"text-center\">Progresso de Interação da Turma com os Recursos</div>\r\n                  </div>\r\n                  <div className = \"p-2\">\r\n                      <ButtonGroup>\r\n                          <Col>\r\n                            <HelpIcon id = \"1\" icon = \"fa fa-info-circle\" \r\n                            help = {\r\n                              <div className=\"text-center\">\r\n                                Este gráfico mostra o progresso \r\n                                da turma com o passar do tempo \r\n                                e o impacto das missões criadas na \r\n                                porcentagem da interação da \r\n                                turma com os recursos.\r\n                              </div>\r\n                            }/>\r\n                          </Col>\r\n                          <Col>\r\n                            { optionSelected === \"Dinâmicas\" ? (\r\n                                <HelpIcon id = \"2\" icon = \"fa fa-exclamation-triangle\" color=\"red\"\r\n                                help = {\r\n                                  <div className=\"text-center\">\r\n                                    Está faltando 2 dias para para o período previsto para o domínio deste assunto finalizar e ainda 50% dos alunos não alcançaram a porcentagem mínima de interação com os recursos. Você pode criar uma missão para motivar esses alunos.\r\n                                  </div>\r\n                                }/>\r\n                              ) : (\r\n                                <HelpIcon id = \"2\" icon = \"fa fa-exclamation-triangle\"\r\n                                help = {\r\n                                  <div className=\"text-center\">\r\n                                    Nenhum alerta para este assunto.\r\n                                  </div>\r\n                                }/>\r\n                              )\r\n                            }\r\n                          </Col>\r\n                      </ButtonGroup>\r\n                  </div>  \r\n                </div>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div style = {{ borderTop: \"0.1em solid grey\", opacity: \"0.3\", margin: \"0 0.5em 1em 0.5em\" }}></div>\r\n                <div>\r\n                  <PerformanceChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n                </div>\r\n            </CardBody>\r\n            <CardFooter>\r\n            </CardFooter>\r\n          </Card>\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"3\" icon = \"fa fa-info-circle\" title = \"Alcance da Porcentagem Mínima\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de alunos \r\n                que atingiram e não atingiram a porcentagem \r\n                mínima de interação com os recursos deste assunto.\r\n              </div>\r\n            }\r\n            content = {\r\n              <ReachStatisticsChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <ReachStatisticsChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"4\" icon = \"fa fa-info-circle\" title = \"Interação da Turma com os Recursos\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de alunos que \r\n                interagiram com sucesso, que não interagiram com \r\n                sucesso e alunos que não interagiram com cada recurso \r\n                adicionado pelo professor no plano de atividades deste assunto.\r\n              </div>\r\n            }\r\n            content = {\r\n              <ResourcesChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <ResourcesChartChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"5\" icon = \"fa fa-info-circle\" title = \"Distribuição da Turma por Nível\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a distribuição dos \r\n                alunos em diferente níveis. Os níveis utilizam \r\n                a pontuação conquistada pelos estudantes através \r\n                das suas interações com os recursos do sistema.\r\n              </div>\r\n            }\r\n            content = {\r\n              <LevelChart courseId={ courseId } classroomId={ classroomId }/>\r\n            }\r\n            contentchild = {\r\n              <LevelChartChild courseId={ courseId } classroomId={ classroomId }/>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Dropdown \r\n            id = \"6\" icon = \"fa fa-info-circle\" title = \"Interação com as Missões\"\r\n            help = {\r\n              <div className=\"text-center\">\r\n                Este gráfico mostra a quantidade de \r\n                alunos que alcançaram, não alcançaram \r\n                e não tentaram alcançar cada missão criada pelo professor.\r\n              </div>\r\n            }\r\n            content = {\r\n              <MissionChart classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n            contentchild = {\r\n              <MissionChartChild classroomId={ classroomId } curriculumId={ curriculumId } courseId={ courseId }/>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <center>\r\n            <NavLink className=\"text-dark\" to={{pathname:\"/dashboardQuestions\", state: {DashboardID: 3}}} > \r\n            <button type=\"button\" style={{marginBottom: '0'}} className=\"btn btn-primary\">\r\n              Avaliar o Painel\r\n            </button>\r\n            </NavLink>\r\n      </center>  \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassInfo;\r\n","import React from \"react\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Col,\r\n    FormGroup,\r\n    Label\r\n} from \"reactstrap\";\r\n\r\nimport Select from 'react-select';\r\nimport ClassInfo_1 from './Dashboard_1/ClassInfo';\r\nimport ClassInfo_2 from './Dashboard_2/ClassInfo';\r\nimport ClassInfo_3 from './Dashboard_3/ClassInfo';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000\";\r\n\r\nconst styleSelect = {\r\n    option: (styles, { data, isDisabled, isFocused, isSelected  }) => {\r\n    return {\r\n        ...styles,\r\n        \r\n        backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? data.selected\r\n            : isFocused\r\n            ? data.focus\r\n            : data.color,\r\n\r\n        ':active': {\r\n            ...styles[':active'],\r\n                backgroundColor: !isDisabled && (isSelected ? data.color : data.focus),\r\n            },\r\n        };\r\n    }\r\n};\r\n\r\nclass Curriculum extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            curriculum: [],\r\n            selectedOption: null,\r\n            date: '',\r\n            dashboard: 0\r\n        }\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const courseId = this.props.courseId;\r\n        const classroomId = this.props.classroomId;\r\n\r\n        const url = baseUrl + \"/course/getCurriculum/\" + courseId + \"/\" + classroomId;\r\n\r\n        axios.get(url).then(res => {\r\n            if (res.data) {\r\n                const data = res.data;\r\n                const url = document.URL;\r\n\r\n                //var date = new Date().getDate();\r\n                //var month = new Date().getMonth() + 1;\r\n\r\n                for (let i = 0; i < data.length; i++) {\r\n                    if(data[i].name === \"Dinâmicas\"){\r\n                        data[i] = { ...data[i], color: \"#FBAAAA\", selected: \"#FBAAAA\", focus: \"#FBAAAA\" }\r\n                    } else {\r\n                        data[i] = { ...data[i], color: \"WHITE\", selected: \"#2684FF\", focus: \"#B2D4FF\" }\r\n                    }\r\n                }\r\n\r\n                this.setState({\r\n                    curriculum: data,\r\n                    //date: date + '/' + month\r\n                });\r\n            } else {\r\n                alert(\"Error web service\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(\"Error server \" + error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { selectedOption, curriculum } = this.state;\r\n        const { classroomId, courseId, teacherId, renderDate, DashboardID } = this.props;\r\n        return (\r\n            <div>\r\n                <FormGroup>\r\n                    <Label className=\"d-flex justify-content-between\" for=\"exampleSelect\" style={{ alignItems: \"center\" }}>\r\n                        <div>\r\n                            Selecione um assunto:\r\n                        </div>\r\n                        {renderDate ? (\r\n                            <div style={{ fontSize: \"20px\" }}>\r\n                                Data atual: 23/11\r\n                                {/*\"Data atual: \" + date */}\r\n                            </div>\r\n                        ) : (\r\n                            null\r\n                        )}\r\n                    </Label>\r\n                    <Col sm={{ size: 5 }} style={{ padding: 0 }}>\r\n                        <Select\r\n                            placeholder=\"--\"\r\n                            value={selectedOption}\r\n                            onChange={this.handleChange}\r\n                            options={curriculum.map(data => ({ label: data.name, value: data.id, color: data.color, selected: data.selected, focus: data.focus }))}\r\n                            styles={styleSelect}\r\n                        />\r\n                    </Col>\r\n                </FormGroup>\r\n                {(() => {\r\n                    if (selectedOption) {\r\n                        if (DashboardID === 1) {\r\n                            return <ClassInfo_1 key={selectedOption.value} classroomId={classroomId} courseId={courseId} teacherId={teacherId} curriculumId={selectedOption.value} optionSelected={selectedOption.label} />;\r\n                        } else if (DashboardID === 2) {\r\n                            return <ClassInfo_2 key={selectedOption.value} classroomId={classroomId} courseId={courseId} teacherId={teacherId} curriculumId={selectedOption.value} optionSelected={selectedOption.label} />;\r\n                        } else if (DashboardID === 3) {\r\n                            return <ClassInfo_3 key={selectedOption.value} classroomId={classroomId} courseId={courseId} teacherId={teacherId} curriculumId={selectedOption.value} optionSelected={selectedOption.label} />;\r\n                        }\r\n                    }\r\n                })()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Curriculum;","import React from \"react\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport Curriculum from \"../Curriculum.jsx\";\r\n\r\nclass ClassDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classroomId: \"\",\r\n            teacherId: \"\",\r\n            courseId: \"\",\r\n            render: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant')).dashboard_sequence;\r\n        if(participant_info.indexOf(1) == -1 || participant_info[0] == 1){\r\n            this.setState({ render: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n        return (\r\n            this.state.render ? (\r\n                <>\r\n                    <div className=\"content\" style={{paddingBottom: \"15px\"}}>\r\n                    <Row></Row>\r\n                    <Row></Row>\r\n                    <Row> <Col><h2>Painel - Interação com os Recursos de Aprendizagem</h2></Col></Row> \r\n                    <Row className = \"border-bottom\">\r\n                        <Col>\r\n                            <button className=\"btn-link text-dark font-weight-bold border-bottom border-dark\">Turma</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row></Row>\r\n                    <br/>\r\n                    <div>\r\n                        <Curriculum teacherId={this.props.match.params.teacherId} classroomId = {this.props.match.params.id} courseId = {this.props.match.params.courseId} renderDate={true} DashboardID={1}/>\r\n                    </div>\r\n                    <br/>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Redirect to={{pathname:\"/admin/classDashboard_\" + participant_info.dashboard_sequence[0] + \"/7/345/32\"}}/>\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default ClassDashboard;","import React from \"react\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport Curriculum from \"../Curriculum.jsx\";\r\n\r\nclass ClassDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classroomId: \"\",\r\n            teacherId: \"\",\r\n            courseId: \"\",\r\n            render: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant')).dashboard_sequence;\r\n        if(participant_info.indexOf(2) == -1 || participant_info[0] == 2){\r\n            this.setState({ render: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n        return (\r\n            this.state.render ? (\r\n                <>\r\n                    <div className=\"content\" style={{paddingBottom: \"15px\"}}>\r\n                    <Row></Row>\r\n                    <Row></Row>\r\n                    <Row> <Col><h2>Painel - Interação com os Elementos de Jogos</h2></Col></Row> \r\n                    <Row className = \"border-bottom\">\r\n                        <Col>\r\n                            <button className=\"btn-link text-dark font-weight-bold border-bottom border-dark\">Turma</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row></Row>\r\n                    <br/>\r\n                    <div>\r\n                        <Curriculum teacherId={this.props.match.params.teacherId} classroomId = {this.props.match.params.id} courseId = {this.props.match.params.courseId} renderDate={true} DashboardID={2}/>\r\n                    </div>\r\n                    <br/>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Redirect to={{pathname:\"/admin/classDashboard_\" + participant_info.dashboard_sequence[0] + \"/7/345/32\"}}/>\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default ClassDashboard;","import React from \"react\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    Row,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport Curriculum from \"../Curriculum.jsx\";\r\n\r\nclass ClassDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classroomId: \"\",\r\n            teacherId: \"\",\r\n            courseId: \"\",\r\n            render: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant')).dashboard_sequence;\r\n        if(participant_info.indexOf(3) == -1 || participant_info[0] == 3){\r\n            this.setState({ render: true });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n        return (\r\n            this.state.render ? (\r\n                <>\r\n                    <div className=\"content\" style={{paddingBottom: \"15px\"}}>\r\n                    <Row></Row>\r\n                    <Row></Row>\r\n                    <Row> <Col><h2>Painel - Interação com os Recursos de Aprendizagem e Elementos de Jogos</h2></Col></Row> \r\n                    <Row className = \"border-bottom\">\r\n                        <Col>\r\n                            <button className=\"btn-link text-dark font-weight-bold border-bottom border-dark\">Turma</button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row></Row>\r\n                    <br/>\r\n                    <div>\r\n                        <Curriculum teacherId={this.props.match.params.teacherId} classroomId = {this.props.match.params.id} courseId = {this.props.match.params.courseId} renderDate={true} DashboardID={3}/>\r\n                    </div>\r\n                    <br/>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <Redirect to={{pathname:\"/admin/classDashboard_\" + participant_info.dashboard_sequence[0] + \"/7/345/32\"}}/>\r\n            )\r\n        );\r\n    }\r\n}\r\nexport default ClassDashboard;","import ClassDashboard_1 from \"views/ClassDashboard/Dashboard_1/ClassDashboard\";\r\nimport ClassDashboard_2 from \"views/ClassDashboard/Dashboard_2/ClassDashboard\";\r\nimport ClassDashboard_3 from \"views/ClassDashboard/Dashboard_3/ClassDashboard\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/classDashboard_1/:id/:teacherId/:courseId\",\r\n    name: \"Dashboard-1\",\r\n    icon: \"nc-icon nc-bank\",\r\n    component: ClassDashboard_1,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/classDashboard_2/:id/:teacherId/:courseId\",\r\n    name: \"Dashboard-2\",\r\n    icon: \"nc-icon nc-bank\",\r\n    component: ClassDashboard_2,\r\n    layout: \"/admin\"\r\n  },\r\n  {\r\n    path: \"/classDashboard_3/:id/:teacherId/:courseId\",\r\n    name: \"Dashboard-3\",\r\n    icon: \"nc-icon nc-bank\",\r\n    component: ClassDashboard_3,\r\n    layout: \"/admin\"\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","/*!\r\n\r\n=========================================================\r\n* Paper Dashboard React - v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n\r\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\n//import { NavLink } from \"react-router-dom\";\r\nimport { Row, Col, Nav } from \"reactstrap\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport prof_male from \"../../assets/img/professor.svg\";\r\nimport prof_female from \"../../assets/img/prof_female.svg\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n    this.sidebar = React.createRef();\r\n  }\r\n\r\n  // verifies if routeName is the one active (in browser input)\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.sidebar.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"sidebar\"\r\n        data-color=\"custom-blue\"\r\n        data-active-color={this.props.activeColor}\r\n      >\r\n        <div className=\"logo\">        \r\n            <div className=\"logo-img\">\r\n              {JSON.parse(sessionStorage.getItem('participant')).gender === \"Feminino\" ? \r\n              <center>\r\n                <br/> \r\n                <img src={prof_female} alt=\"profFemale-logo\"/>\r\n                <br/><br/> \r\n              </center> \r\n              :\r\n              <img src={prof_male} alt=\"profMale-logo\"/>\r\n              }\r\n            </div>          \r\n            {JSON.parse(sessionStorage.getItem('participant')).gender === \"Feminino\" ? \r\n            <Row><Col className=\".col-sm-auto .offset-sm-3 text-center text-success\" >Bem-Vinda, Professora\r\n              {/*  {sessionStorage.getItem(\"teacherName\")}  */}\r\n              <br/> \r\n            </Col></Row>        \r\n            : \r\n            <Row><Col className=\".col-sm-auto .offset-sm-3 text-center text-success\" >Bem-Vindo, Professor \r\n              {/* {sessionStorage.getItem(\"teacherName\")}   */}\r\n              <br/>\r\n            </Col></Row>}        \r\n        </div>\r\n        <div className=\"sidebar-wrapper\" ref={this.sidebar}>\r\n        <Nav>\r\n          {/* <Row className=\"\">\r\n          <Col className=\".col-sm-auto .offset-sm-3 text-center \">\r\n          <NavLink to= \"/admin/classes\">\r\n          <p className= \" text-center font-weight-bold \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>Minhas Turmas</p>\r\n          </NavLink>\r\n          </Col>\r\n          </Row>  */}\r\n        </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","/*!\n\n=========================================================\n* Paper Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport {\n  Navbar,\n  Container\n} from \"reactstrap\";\nimport routes from \"routes.jsx\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      dropdownOpen: false,\n      color: \"transparent\"\n    };\n    this.toggle = this.toggle.bind(this);\n    this.dropdownToggle = this.dropdownToggle.bind(this);\n    this.sidebarToggle = React.createRef();\n  }\n  toggle() {\n    if (this.state.isOpen) {\n      this.setState({\n        color: \"transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"dark\"\n      });\n    }\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  dropdownToggle(e) {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  getBrand() {\n    let brandName = \"Default Brand\";\n    routes.map((prop, key) => {\n      if (window.location.href.indexOf(prop.layout + prop.path) !== -1) {\n        brandName = prop.name;\n      }\n      return null;\n    });\n    return brandName;\n  }\n  openSidebar() {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\n  }\n  // function that adds color dark/transparent to the navbar on resize (this is for the collapse)\n  updateColor() {\n    if (window.innerWidth < 993 && this.state.isOpen) {\n      this.setState({\n        color: \"dark\"\n      });\n    } else {\n      this.setState({\n        color: \"transparent\"\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\n    }\n  }\n  // logOut(e) {\n  //   e.preventDefault()\n  //   localStorage.removeItem('usertoken')\n  //   Auth.signout()\n  //   this.props.history.push(`/`)\n  // }   \n  render() {\n    return (\n      // add or remove classes depending if we are on full-screen-maps page or not\n      <Navbar\n        color={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"dark\"\n            : this.state.color\n        }\n        expand=\"lg\"\n        className={\n          this.props.location.pathname.indexOf(\"full-screen-maps\") !== -1\n            ? \"navbar-absolute fixed-top\"\n            : \"navbar-absolute fixed-top \" +\n              (this.state.color === \"transparent\" ? \"navbar-transparent \" : \"\")\n        }\n      >\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            Visualização de Dados - Learning and Gamification Analytics\n          </div>\n          {/* <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            className=\"justify-content-end\"\n          >\n            <Nav navbar>\n              <Dropdown\n                nav\n                isOpen={this.state.dropdownOpen}\n                toggle={e => this.dropdownToggle(e)}\n              >\n\n                <DropdownToggle caret nav>\n                  <i className=\"nc-icon nc-settings-gear-65\" />\n                  <p>\n                    <span className=\"d-lg-none d-md-block\">Settings</span>\n                  </p>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {/* <DropdownItem >Sair</DropdownItem> */}\n                {/* </DropdownMenu>\n              </Dropdown>\n            </Nav>\n          </Collapse> */} \n        </Container>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\r\n// javascript plugin used to create scrollbars on windows\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport DemoNavbar from \"components/Navbars/DemoNavbar.jsx\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\r\n//import Footer from \"components/Footer/Footer.jsx\";\r\n\r\nimport routes from \"routes.jsx\";\r\n\r\nvar ps;\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            backgroundColor: \"black\",\r\n            activeColor: \"info\",\r\n            accepted: true\r\n        };\r\n        this.mainPanel = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.accepted) {\r\n            if (navigator.platform.indexOf(\"Win\") > -1) {\r\n                ps = new PerfectScrollbar(this.mainPanel.current);\r\n                document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!sessionStorage.getItem('accepted') || !sessionStorage.getItem('participant')) {\r\n            this.setState({ accepted: false });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.accepted) {\r\n            if (navigator.platform.indexOf(\"Win\") > -1) {\r\n                ps.destroy();\r\n                document.body.classList.toggle(\"perfect-scrollbar-on\");\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(e) {\r\n        if (e.history.action === \"PUSH\") {\r\n            this.mainPanel.current.scrollTop = 0;\r\n            document.scrollingElement.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    handleActiveClick = color => {\r\n        this.setState({ activeColor: color });\r\n    };\r\n\r\n    handleBgClick = color => {\r\n        this.setState({ backgroundColor: color });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.state.accepted ? (\r\n                <div className=\"wrapper\">\r\n                    <Sidebar\r\n                        {...this.props}\r\n                        bgColor={this.state.backgroundColor}\r\n                        activeColor={this.state.activeColor}\r\n                    />\r\n                    <div className=\"main-panel\" ref={this.mainPanel}>\r\n                        <DemoNavbar {...this.props} />\r\n                        <Switch>\r\n                            {routes.map((prop, key) => {\r\n                                return (<Route path={prop.layout + prop.path} component={prop.component} key={key}/>);\r\n                            })}\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <Redirect to={{ pathname: '/' }}/>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nimport {\r\n    Col\r\n} from 'reactstrap';\r\n\r\nimport logo_ufal from \"../../../assets/img/logo_ufal_.png\";\r\nimport logo_nees from \"../../../assets/img/nees.png\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Col style={{ marginBottom: '2em' }}>\r\n                    <br />\r\n                    <p style={{ color: '#C0B283', fontSize: '40px', textAlign: 'center' }} >\r\n                        <strong>Avaliação de Diferentes Painéis de Dados para Apoio no Processo de Tomada de Decisão por Professores</strong>\r\n                        <br />\r\n                        <img src={logo_nees} alt=\"nees-logo\" align=\"center\" width=\"110\" height=\"100\" hspace=\"20\" />\r\n                        <img src={logo_ufal} alt=\"ufal-logo\" align=\"center\" width=\"60\" height=\"100\" />\r\n                    </p>\r\n                </Col>\r\n                <hr style={{ backgroundColor: \"#C0B283\" }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport {\r\n  Input,\r\n  Button,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nclass StarterTerm extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            terms : '0',\r\n            checkValid: false,\r\n        }\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        sessionStorage.clear();\r\n    }\r\n    \r\n    handleCheckbox() {\r\n        this.setState(prevState => ({\r\n            checkValid : !prevState.checkValid\r\n        }));\r\n    }\r\n    accept()\r\n    {\r\n        sessionStorage.setItem('accepted', true);\r\n    }\r\n    render () {\r\n        return(\r\n            <div>\r\n            <Header/>\r\n            <Col sm=\"50\" md={{ size: 8, offset: 2 }} className=\"text-justify\">\r\n            <p className= \" text-center font-weight-bold \" style={{fontFamily: 'Calibri', fontSize: '25px'}}>Termo de Consentimento Livre e Esclarecido</p>\r\n            <br/>\r\n            <p className= \" text-justify font-weight-bold \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>Leia atentamente o formulário de consentimento abaixo e comece a participar do estudo se você concorda com os termos de consentimento.</p>\r\n            <br/>\r\n            <p className= \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}> \r\n            Você está sendo convidado a participar de uma pesquisa de opinião. O objetivo desta pesquisa é avaliar quais informações dos estudantes, apresentadas através de diferentes painéis de dados, melhor auxilia o professor no processo de tomada de decisão durante o ensino/aprendizagem em uma plataforma de ensino gamificada. \r\n            </p>\r\n            <br/>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n              <strong> Título do Estudo: </strong> Avaliação de diferentes painéis de dados para o auxílio de professores no processo de tomada de decisão em Ambientes Educacionais Gamificados.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n              <strong> Pesquisadores: </strong> \r\n              <ul>\r\n                <li className = \" text-justify \"> Kamilla Tenório (kktas@ic.ufal.br)</li>\r\n                <li className = \" text-justify \"> Diego Dermeval (diego.matos@famed.ufal.br)</li>\r\n                <li className = \" text-justify \"> Alexandre Machado (alexandretopeca@gmail.com)</li>\r\n                <li className = \" text-justify \"> Bruno Lemos (bruno.lemos.ec@gmail.com)</li>\r\n                <li className = \" text-justify \"> Pedro Henrique (phbn@ic.ufal.br)</li>\r\n                <li className = \" text-justify \"> Rodrigo Santos (rss3@ic.ufal.br)</li>\r\n              </ul>\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Finalidade e Procedimento: </strong>A finalidade desta pesquisa de opinião é avaliar, no ponto de vista do professor, quais informações dos estudantes melhor o auxilia  no processo de tomada de decisão durante o ensino/aprendizagem em uma plataforma de ensino gamificada. Com intuito de alcançar o objetivo da pesquisa, três painéis com diferentes dados dos estudantes serão analisados. O primeiro painel terá informações apenas da interação dos estudantes com os recursos de aprendizagem do sistema. O segundo painel terá apenas informações da interação dos estudantes com os elementos de gamificação do sistema. E por fim, o terceiro painel terá informações relacionada tanto a interação dos alunos com os recursos de aprendizagem quanto com com os elementos de gamificação do sistema gamificado. Portanto, a sua participação nesta pesquisa consistirá na realização das seguintes atividades: <br/><br/>\r\n                <ul>\r\n                    <li className = \" text-justify \">\r\n                    Primeiro, você irá responder um questionário demográfico, onde deve ser informado seu gênero, idade, nível educacional que leciona e estado onde mora, assim como seu nível de habilidade técnica em relação ao uso de tecnologias de informação. \r\n                    </li>\r\n                    <li className = \" text-justify \">\r\n                    Segundo, você irá visualizar os 3 diferentes painéis de dados em ordem aleatória. Após a visualização de cada um dos painéis, você irá responder a um questionário com 9 perguntas, cujo o objetivo é avaliar sua compreensão, utilidade percebida e mudanças comportamentais em relação aos diferentes painéis. \r\n                    </li>\r\n                </ul>\r\n            </p>\r\n            <br/>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Potenciais Benefícios: </strong> Os resultados da pesquisa de opinião podem contribuir para um melhor entendimento de quais dados dos estudantes melhor apoia o processo de tomada de decisão de professores em um ambiente educacional gamificado.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Potenciais Riscos: </strong> Não há riscos conhecidos neste estudo.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Confidencialidade: </strong> Ao participar deste estudo, você reconhece e concorda que suas respostas e contribuições serão registradas anonimamente para fins de análise de dados mais confiáveis.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Disseminação dos Resultados: </strong> Os resultados agregados deste estudo aparecerão em artigos publicados em conferências revisadas por pares e revistas científicas nacionais e internacionais.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Direito de Retirada: </strong> A participação neste estudo é voluntária, e você pode decidir não participar a qualquer momento, ou optar por não responder a perguntas com as quais não se sinta confortável. As respostas da pesquisa permanecerão anônimas. Uma vez que a pesquisa é anônima, quando é submetida, não pode ser removida.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Dúvidas: </strong> Se você tiver alguma dúvida sobre o estudo, não hesite em perguntar a qualquer momento. Você também está livre para entrar em contato com os pesquisadores se você tiver dúvidas no futuro. Este estudo não precisa ser submetido ao comitê de ética, pois ele está avaliando apenas recursos para melhorar o software desenvolvido.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Acompanhamento: </strong> Se você tiver interesse em saber os resultados deste estudo, você pode contatar os pesquisadores usando as informações de contato fornecidas acima.\r\n            </p>\r\n            <p className = \" text-justify \" style={{fontFamily: 'Calibri', fontSize: '20px'}}>\r\n                <strong> Consentimento para Participar: </strong> Ao preencher e submeter este questionário, o seu consentimento livre e esclarecido é implícito e indica que você entende as condições acima de participação neste estudo.\r\n            </p>\r\n            <br/>\r\n            <Input type=\"checkbox\" style={{position: 'relative', margin: '0 0.5em 0 0'}} onChange={this.handleCheckbox}/> \r\n            Declaro que compreendi os objetivos, riscos e benefícios de minha participação na pesquisa e que concordo em participar.<br/><br/>\r\n                {!this.state.checkValid ? \r\n                    <center>\r\n                    <Button disabled={!this.state.checkValid } color =\"#C0B283\" type=\"submit\"> \r\n                        Continuar\r\n                    </Button>\r\n                    </center>\r\n                  :\r\n                    <Link className=\"text-dark\" to={{pathname:\"/demographicquest\"}} onClick = {this.accept}>\r\n                        <center>\r\n                        <Button color =\"#C0B283\" type=\"submit\"> \r\n                            Continuar\r\n                            </Button>\r\n                        </center>\r\n                    </Link> }\r\n            <br/>\r\n            </Col>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StarterTerm;\r\n","import Swal from 'sweetalert2';\n\nconst PopUp = {\n  showMessage: (status, msg) => {\n    if(status === 'success') {\n      Swal.fire({\n        icon: \"success\",\n        text: msg,\n        type: 'success',        \n        timer: 2000\n      })\n    }\n\n    if(status === 'error'){\n      Swal.fire({\n        icon: 'error',\n        text: msg,\n        type: 'error',\n        confirmButtonText: 'Ok'        \n      })\n    }\n  }\n}\n\nexport default PopUp;","import React from 'react';\r\n\r\nconst CheckBox = (props) => {\r\n    return (<div className=\"form-group\">\r\n        <strong>\r\n            <label htmlFor={props.name} className=\"form-label text-secondary\" style={{ fontSize: '20px' }}>{props.title}</label>\r\n        </strong>\r\n        <b className=\"text-danger\" style={{ display: 'block' }}>(Preenchimento obrigatório)</b>\r\n        <br />\r\n        <div className=\"radio\">\r\n            {props.options.map(option => {\r\n                return (\r\n                    <div style={props.displaystyle} key={option}>\r\n                        <label style={{ fontSize: '18px' }} className=\"checkbox-inline\">\r\n                            <input className=\"text-secondary\"\r\n                                id={props.option}\r\n                                name={props.name}\r\n                                onChange={props.handleChange}\r\n                                value={option}\r\n                                checked={props.selectedOptions.indexOf(option) > -1}\r\n                                type=\"radio\" /> {option}\r\n                        </label>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CheckBox;","import React from 'react';\r\n\r\nconst TextArea = (props) => (\r\n    <div className=\"form-group\">\r\n        <strong>\r\n            <label className=\"form-label text-secondary\" style={{ fontSize: '20px' }}>{props.title}</label>\r\n        </strong>\r\n    &nbsp;\r\n    &nbsp;\r\n    &nbsp;\r\n        <b className=\"text-danger\">(Preenchimento obrigatório)</b>\r\n        <textarea style={{ height: '50px', width: '40%', color: 'black', fontWeight: 'bold' }}\r\n            className=\"form-control\"\r\n            name={props.name}\r\n            rows={props.rows}\r\n            cols={props.cols}\r\n            value={props.value}\r\n            onChange={props.handleChange}\r\n            placeholder={props.placeholder} />\r\n    </div>\r\n);\r\n\r\nexport default TextArea;","import React from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n    Col,\r\n    Form,\r\n    Button,\r\n} from 'reactstrap';\r\n\r\nimport PopUp from '../PopUp';\r\nimport Checkbox from \"./components/Checkbox\";\r\nimport TextArea from \"./components/TextArea\";\r\nimport Header from \"./components/Header\";\r\nimport axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000/course\";\r\n\r\nclass FormContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            participant: {\r\n                id: null,\r\n                gender: '',\r\n                age: '',\r\n                educational_level: '',\r\n                state: '',\r\n                technical_level: '',\r\n                dashboard_sequence: null\r\n            },\r\n            accepted: true,\r\n            component: '',\r\n            failed: false,\r\n            redirect: false,\r\n            age_valid: false,\r\n            gender_valid: false,\r\n            educational_level_valid: false,\r\n            technical_level_valid: false,\r\n            state_valid: false,\r\n            formErrors: { state: '', age: '', educational_level: '', gender: '', technical_level_valid: '' },\r\n            formValid: false,\r\n            technical_level_options: ['Baixo', 'Médio', 'Alto'],\r\n            ageOptions: ['Inferior a 18 anos', '18 a 25 anos', '26 a 40 anos', '41 a 65 anos', 'Superior a 65 anos'],\r\n            genderOptions: ['Feminino', 'Masculino', 'Outros'],\r\n            educational_levelOptions: ['Ensino Médio', 'Ensino Técnico', 'Ensino Superior', 'Mestrado', 'Doutorado'],\r\n        }\r\n        this.handleTextArea = this.handleTextArea.bind(this);\r\n        this.handleCheckBoxAge = this.handleCheckBoxAge.bind(this);\r\n        this.handleCheckBoxGender = this.handleCheckBoxGender.bind(this);\r\n        this.handleCheckBoxTechnicalLevel = this.handleCheckBoxTechnicalLevel.bind(this);\r\n        this.handleCheckBoxEducacationalLevel = this.handleCheckBoxEducacationalLevel.bind(this);\r\n    }\r\n\r\n    handleCheckBoxTechnicalLevel(e) {\r\n        const value = e.target.value;\r\n        this.setState(prevState => (\r\n            {\r\n                participant: {\r\n                    ...prevState.participant, technical_level: value\r\n                }\r\n            }\r\n        ), () => { this.validateField('technical_level', value) })\r\n    }\r\n    \r\n    handleCheckBoxAge(e) {\r\n        const value = e.target.value;\r\n        this.setState(prevState => ({\r\n            participant:\r\n            {\r\n                ...prevState.participant, age: value\r\n            }\r\n        }), () => { this.validateField('age', value) })\r\n    }\r\n\r\n    handleCheckBoxGender(e) {\r\n        const value = e.target.value;\r\n        this.setState(prevState => ({\r\n            participant:\r\n            {\r\n                ...prevState.participant, gender: value\r\n            }\r\n        }), () => { this.validateField('gender', value) })\r\n    }\r\n\r\n    handleCheckBoxEducacationalLevel(e) {\r\n        const value = e.target.value;\r\n        this.setState(prevState => ({\r\n            participant:\r\n            {\r\n                ...prevState.participant, educational_level: value\r\n            }\r\n        }), () => { this.validateField('educational_level', value) })\r\n    }\r\n\r\n    handleTextArea(e) {\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        this.setState(prevState => ({\r\n            participant: {\r\n                ...prevState.participant, [name]: value\r\n            }\r\n        }), () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        //let nameValid = this.state.nameValid;\r\n        let age_valid = this.state.age_valid;\r\n        let gender_valid = this.state.gender_valid;\r\n        let educational_level_valid = this.state.educational_level_valid;\r\n        let technical_level_valid = this.state.technical_level_valid;\r\n        let state_valid = this.state.state_valid;\r\n        switch (fieldName) {\r\n            case 'age':\r\n                age_valid = value.length > 0;\r\n                fieldValidationErrors.age = age_valid ? '' : 'notValid';\r\n                break;\r\n            case 'gender':\r\n                gender_valid = value.length > 0;\r\n                fieldValidationErrors.gender = gender_valid ? '' : 'notValid';\r\n                break;\r\n            case 'educational_level':\r\n                educational_level_valid = value.length > 0;\r\n                fieldValidationErrors.educational_level = educational_level_valid ? '' : 'notValid';\r\n                break;\r\n            case 'state':\r\n                state_valid = value.length > 0;\r\n                fieldValidationErrors.state_valid = state_valid ? '' : 'notValid';\r\n                break;\r\n            case 'technical_level':\r\n                technical_level_valid = value.length > 0;\r\n                fieldValidationErrors.technical_level_valid = technical_level_valid ? '' : 'notValid';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            //nameValid: nameValid,\r\n            age_valid: age_valid,\r\n            educational_level_valid: educational_level_valid,\r\n            state_valid: state_valid,\r\n            gender_valid: gender_valid,\r\n            technical_level_valid: technical_level_valid\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({\r\n            formValid:\r\n                this.state.educational_level_valid && this.state.age_valid && this.state.gender_valid && this.state.state_valid && this.state.technical_level_valid\r\n        })\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? '' : 'has-error');\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!sessionStorage.getItem('accepted')) {\r\n            this.setState({ accepted: false })\r\n        }\r\n    }\r\n\r\n    redirect() {\r\n        axios.get(baseUrl + '/getParticipants')\r\n            .then((res) => {\r\n                const participant_id = res.data[0].count + 1;\r\n                const dashboard_perm = [[1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1]];\r\n                const perm = dashboard_perm[(participant_id - 1) % dashboard_perm.length];\r\n                this.setState(prevState => ({\r\n                    participant: {\r\n                        ...prevState.participant, id: participant_id, dashboard_sequence: perm\r\n                    },\r\n                    failed: false\r\n                }), () => {\r\n                    sessionStorage.setItem('participant', JSON.stringify(this.state.participant));\r\n                    this.setState({ redirect: true });\r\n                });\r\n            })\r\n            .catch(error => {//Sujeito a melhoras\r\n                this.setState({\r\n                    failed: true\r\n                });\r\n                const component = (this.state.failed) ? (PopUp.showMessage(\"error\", \"Perdão, o banco de dados está temporariamente desativado, nos contate.\")) : (<div></div>);\r\n                this.setState({\r\n                    component: component\r\n                });\r\n                console.log(this.state.failed);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.accepted ? (\r\n                <div>\r\n                    <Header />\r\n                    <Col>\r\n                        <p className=\" text-center font-weight-bold \" style={{ fontFamily: 'Calibri', fontSize: '25px', color: '#6c757d' }}> Questionário Demográfico </p> <br />\r\n                        <Form className=\"container\" >\r\n                            <div className=\"panel panel-default\">\r\n                                {/* <FormErrors formErrors={this.state.formErrors} /> */}\r\n                            </div>\r\n                            {/* <div className={`form-group ${this.errorClass(this.state.formErrors.name)}`}>\r\n                                    <TextArea\r\n                                        title={'Informe seu nome:'}\r\n                                        rows={1}\r\n                                        value={this.state.participant.name}\r\n                                        name={'name'}\r\n                                        handleChange={this.handleTextArea}/>\r\n                                </div> */}\r\n                            <Checkbox title={'Informe sua idade:'}\r\n                                name={'age'}\r\n                                options={this.state.ageOptions}\r\n                                selectedOptions={this.state.participant.age}\r\n                                value={this.state.participant.age}\r\n                                handleChange={this.handleCheckBoxAge} />\r\n                            <br />\r\n                            <Checkbox title={'Selecione seu gênero:'}\r\n                                name={'gender'}\r\n                                options={this.state.genderOptions}\r\n                                selectedOptions={this.state.participant.gender}\r\n                                value={this.state.participant.gender}\r\n                                handleChange={this.handleCheckBoxGender} />\r\n                            <br />\r\n                            <br />\r\n                            <Checkbox title={'Selecione seu nível de habilidade técnica:'}\r\n                                name={'technical_level'}\r\n                                options={this.state.technical_level_options}\r\n                                selectedOptions={this.state.participant.technical_level}\r\n                                value={this.state.participant.technical_level}\r\n                                handleChange={this.handleCheckBoxTechnicalLevel} />\r\n                            <br />\r\n                            <br />\r\n                            <TextArea\r\n                                title={'Informe qual nível educacional você leciona:'}\r\n                                rows={1}\r\n                                name={'educational_level'}\r\n                                // value={this.state.educational_levelOptions}\r\n                                // selectedOptions = {this.state.participant.educational_level}\r\n                                value={this.state.participant.educational_level}\r\n                                handleChange={this.handleCheckBoxEducacationalLevel} />\r\n                            <br />\r\n                            <br />\r\n                            <TextArea\r\n                                title={'Informe seu Estado: '}\r\n                                rows={1}\r\n                                name={'state'}\r\n                                // value={this.state.educational_levelOptions}\r\n                                // selectedOptions = {this.state.participant.educational_level}\r\n                                value={this.state.participant.state}\r\n                                handleChange={this.handleTextArea} />\r\n                            <br />\r\n                            <br />\r\n                            <Col sm={{ span: 10, offset: 5 }}>\r\n                                <Button color=\"#C0B283\" disabled={!this.state.formValid} onClick={() => this.redirect()}>\r\n                                    <span className=\"text-white\"> Próxima Etapa </span>\r\n                                </Button>\r\n                            </Col>\r\n                        </Form>\r\n                        {this.state.redirect ? (<Redirect push to={{ pathname: \"/projecttutorial\" }} />) : (this.state.component)}\r\n                    </Col>\r\n                </div>\r\n            ) : (\r\n                <Redirect to={{ pathname: '/' }} />\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormContainer;","import React from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nimport { parseCommandLine } from 'typescript';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL || \"http://localhost:4000/course\";\r\n\r\nclass Thanks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          redirect: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(sessionStorage.getItem('accepted')&&sessionStorage.getItem('participant')&&sessionStorage.getItem('survey1')&&sessionStorage.getItem('survey2')&&sessionStorage.getItem('survey3')) {\r\n            let participant = JSON.parse(sessionStorage.getItem('participant'));\r\n\r\n            axios.post(baseUrl + '/createParticipant', participant)\r\n            .then( resp => \r\n            {\r\n                let i, req = [];\r\n                for(i = 1; i <= 3; i++)\r\n                {\r\n                    let survey = JSON.parse(sessionStorage.getItem('survey' + i));\r\n                    let promise = axios({\r\n                        method: 'post',\r\n                        url: baseUrl+'/createSurvey',\r\n                        data: survey\r\n                    })\r\n                    req.push(promise);\r\n                }\r\n                axios.all(req)\r\n                .then(axios.spread((...responses)=>{\r\n                    responses.forEach(res=> console.log('Saved'));\r\n\r\n                    sessionStorage.clear();\r\n                }))\r\n                .catch(error=>{\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(error=> console.log(error));\r\n        } else {\r\n            this.redirect();\r\n        }\r\n    }\r\n\r\n    redirect() {\r\n        this.setState({\r\n            redirect: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <center className=\"col\" style={{height: '585px', flexDirection: 'column', justifyContent: 'center', display: 'flex'}}>\r\n                    <p style={{color: \"#000000\", fontSize: '22px'}}>Este é o final da pesquisa. Muito obrigado pela colaboração!</p>\r\n                    {this.state.redirect ? (<Redirect to={{ pathname:\"/\"}}/>) : <div></div>}\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Thanks;","import React from \"react\";\r\n\r\nimport {\r\n    Button,\r\n    Col\r\n} from \"reactstrap\";\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Header from \"./components/Header\";\r\n\r\nimport YouTube from 'react-youtube';\r\n\r\nclass ProjectTutorial extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            accepted: true\r\n        }\r\n        this.redirect = this.redirect.bind(this);\r\n        this._onReady = this._onReady.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (!sessionStorage.getItem('accepted') || !sessionStorage.getItem('participant')) {\r\n            this.setState({ accepted: false }, console.log('N'));\r\n        }\r\n    }\r\n    redirect() {\r\n        this.setState({ redirect: true });\r\n    }\r\n\r\n    _onReady(event) {\r\n        // access to player in all event handlers via event.target\r\n        event.target.pauseVideo();\r\n    }\r\n\r\n    render() {\r\n        const opts = {\r\n            height: '390',\r\n            width: '640',\r\n            playerVars: {\r\n                autoplay: 1\r\n            }\r\n        }\r\n\r\n        const participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Col sm=\"50\" md={{ size: 8, offset: 2 }} className=\"text-justify\">\r\n                    <p className=\" text-center font-weight-bold \" style={{ fontFamily: 'Calibri', fontSize: '30px' }}>Tutorial da Ferramenta</p>\r\n                    <center><p>Por favor, assista o seguinte vídeo tutorial referente a utilização da ferramenta a qual se baseia no modelo explicado anteriormente.</p></center>\r\n                    <br />\r\n                    <center>\r\n                        <YouTube\r\n                            videoId=\"oZpnWOCI0L0\"\r\n                            opts={opts}\r\n                        />\r\n                    </center>\r\n                    <br />\r\n                    <center>\r\n                        <Button color=\"#C0B283\" type=\"button\" onClick={this.redirect}>\r\n                            Visualizar Ferramenta\r\n                        </Button>\r\n                        {this.state.redirect ? (<Redirect push to={{ pathname: \"/admin/classDashboard_\" + participant_info.dashboard_sequence[0] + \"/7/345/32\" }} />) : (<div></div>)}\r\n                        {this.state.accepted ? <div></div> : <Redirect to={{ pathname: '/' }} />}\r\n                    </center>\r\n                    <br />\r\n                </Col>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectTutorial;","import React from 'react';\r\n\r\nconst LargeTextArea = (props) => (\r\n    <div className=\"form-group\">\r\n        <strong>\r\n            <label className=\"form-label text-secondary\" style={{ fontSize: '20px' }}>{props.title}</label>\r\n        </strong>\r\n    &nbsp;\r\n    &nbsp;\r\n    &nbsp;\r\n        <textarea style={{ height: '100px', width: '100%', color: 'black', fontWeight: 'bold' }}\r\n            className=\"form-control\"\r\n            name={props.name}\r\n            rows={props.rows}\r\n            cols={props.cols}\r\n            value={props.value}\r\n            onChange={props.handleChange}\r\n            placeholder={props.placeholder} />\r\n    </div>\r\n);\r\n\r\nexport default LargeTextArea;","import React from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  Form,\r\n  Button,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nimport Checkbox from \"./components/Checkbox\";\r\nimport Header from \"./components/Header\";\r\nimport LargeTextArea from \"./components/LargeTextArea\";\r\n\r\nconst baseUrl =  process.env.REACT_APP_API_URL || \"http://localhost:4000/course\";\r\n\r\nclass DashboardQuestions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            questionAnswers: {\r\n                participant_id: null,\r\n                q1: '',\r\n                q2: '',\r\n                q3: '',\r\n                q4: '',\r\n                q5: '',\r\n                q6: '',\r\n                q7: '',\r\n                q8: '',\r\n                q9: '',\r\n                openQuestion1: '',\r\n                openQuestion2: '',\r\n                survey_type: null\r\n            },\r\n            accepted: true,\r\n            formErrors: { \r\n                q1: '',\r\n                q2: '',\r\n                q3: '',\r\n                q4: '',\r\n                q5: '',\r\n                q6: '',\r\n                q7: '',\r\n                q8: '',\r\n                q9: ''\r\n            },\r\n            credibility: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\r\n            possibleOptions: ['Discordo totalmente', 'Discordo', 'Discordo Parcialmente', 'Neutro', 'Concordo Parcialmente', 'Concordo', 'Concordo totalmente']\r\n        } \r\n        this.redirect = this.redirect.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }  \r\n    componentWillMount()\r\n    {\r\n        if(!sessionStorage.getItem('accepted') || !sessionStorage.getItem('participant'))\r\n        {\r\n            this.setState({accepted: false});\r\n        }\r\n    }\r\n    redirect(){\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n\r\n        let survey_type = parseInt(this.props.location.state.DashboardID);\r\n        let surveyName = 'survey' + survey_type; \r\n        this.setState(prevState => ({ questionAnswers: {...prevState.questionAnswers, participant_id: participant_info.id, survey_type: survey_type}}), () => {\r\n            sessionStorage.setItem(surveyName, JSON.stringify(this.state.questionAnswers));\r\n            \r\n            this.setState({redirect: true});\r\n\r\n            const index = participant_info.dashboard_sequence.indexOf(survey_type);\r\n            if (index > -1) {\r\n                participant_info.dashboard_sequence.splice(index, 1);\r\n            }\r\n\r\n            sessionStorage.setItem('participant', JSON.stringify(participant_info));\r\n        });\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let q1AnswerValid = this.state.q1Valid;\r\n        let q2AnswerValid = this.state.q2Valid;\r\n        let q3AnswerValid = this.state.q3Valid;\r\n        let q4AnswerValid = this.state.q4Valid;\r\n        let q5AnswerValid = this.state.q5Valid;\r\n        let q6AnswerValid = this.state.q6Valid;\r\n        let q7AnswerValid = this.state.q7Valid;\r\n        let q8AnswerValid = this.state.q8Valid;\r\n        let q9AnswerValid = this.state.q9Valid;\r\n  \r\n        switch(fieldName) {\r\n            case 'q1':\r\n                q1AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q1 = q1AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q2':\r\n                q2AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q2 = q2AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q3':\r\n                q3AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q3 = q3AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q4':\r\n                q4AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q4 = q4AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q5':\r\n                q5AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q5 = q5AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q6':\r\n                q6AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q6 = q6AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q7':\r\n                q7AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q7 = q7AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q8':\r\n                q8AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q8 = q8AnswerValid ? '' : 'notValid';\r\n                break;\r\n            case 'q9':\r\n                q9AnswerValid = value.length>0 ? true : false;\r\n                fieldValidationErrors.q9 = q9AnswerValid ? '' : 'notValid';\r\n                break;\r\n        }\r\n\r\n        this.setState({formErrors: fieldValidationErrors, q1Valid: q1AnswerValid, q2Valid: q2AnswerValid, q3Valid: q3AnswerValid, q4Valid: q4AnswerValid, q5Valid: q5AnswerValid, q6Valid: q6AnswerValid, q7Valid: q7AnswerValid, q8Valid: q8AnswerValid, q9Valid: q9AnswerValid}, this.validateForm);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState(prevState => ({ questionAnswers : {...prevState.questionAnswers, [name]: [value]}}), ()=>{this.validateField(name,value)});\r\n    }\r\n\r\n    validateForm()\r\n    {\r\n        this.setState({formValid: (this.state.q1Valid && this.state.q2Valid && this.state.q3Valid && this.state.q4Valid && this.state.q5Valid && this.state.q6Valid && this.state.q7Valid && this.state.q8Valid && this.state.q9Valid)});\r\n    }\r\n\r\n    render()\r\n    {\r\n        let participant_info = JSON.parse(sessionStorage.getItem('participant'));\r\n        return(\r\n            this.state.accepted ? (\r\n                <div>\r\n                    <Header/>\r\n                    <p className= \" text-center font-weight-bold \" style={{fontFamily: 'Calibri', fontSize: '25px', color: '#6c757d'}}> Responda as seguintes questões sobre a sua experiência com o painel apresentado: </p>\r\n                    <br/> \r\n                    <Form className=\"container\">\r\n                        <Checkbox title={'Eu entendi o que as informações estatísticas no dashboard implicam.'} \r\n                            name={'q1'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q1}\r\n                            value = {this.state.questionAnswers.q1}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'Eu entendi o que as informações visuais no dashboard implicam.'} \r\n                            name={'q2'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q2}\r\n                            value = {this.state.questionAnswers.q2}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'Entendi o status da turma imediatamente através do dashboard.'} \r\n                            name={'q3'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q3}\r\n                            value = {this.state.questionAnswers.q3}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n                        \r\n                        <Checkbox title={'As informações que estão no dashboard são as que eu quero saber.'} \r\n                            name={'q4'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q4}\r\n                            value = {this.state.questionAnswers.q4}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'O dashboard inclui apenas informações essenciais.'} \r\n                            name={'q5'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q5}\r\n                            value = {this.state.questionAnswers.q5}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'O dashboard pode me ajudar a monitorar atividades relacionadas a metas.'} \r\n                            name={'q6'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q6}\r\n                            value = {this.state.questionAnswers.q6}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n                        \r\n                        <Checkbox title={'O dashboard pode me ajudar a mudar as estratégias de gerenciamento de recursos para turma.'} \r\n                            name={'q7'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q7}\r\n                            value = {this.state.questionAnswers.q7}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'O dashboard pode me ajudar a alcançar os objetivos de desempenho desejado para a turma.'} \r\n                            name={'q8'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q8}\r\n                            value = {this.state.questionAnswers.q8}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Checkbox title={'Ficarei motivado a me engajar no uso da plataforma ao revisar o dashboard.'} \r\n                            name={'q9'}\r\n                            options={this.state.possibleOptions}\r\n                            selectedOptions = {this.state.questionAnswers.q9}\r\n                            value = {this.state.questionAnswers.q9}\r\n                            handleChange = {this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <LargeTextArea\r\n                            title={'Por favor, descreva aqui um ponto negativo sobre esta versão da ferramenta apresenta.'}\r\n                            rows={3}\r\n                            value={this.state.questionAnswers.openQuestion1}\r\n                            name={'openQuestion1'}\r\n                            handleChange={this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <LargeTextArea\r\n                            title={'Por favor, descreva aqui um ponto positivo sobre esta versão da ferramenta apresenta.'}\r\n                            rows={3}\r\n                            value={this.state.questionAnswers.openQuestion2}\r\n                            name={'openQuestion2'}\r\n                            handleChange={this.handleChange}/>\r\n                        <br/>\r\n\r\n                        <Col sm={{ span: 10, offset: 5 }}>\r\n                            <Button color=\"#C0B283\" disabled={!this.state.formValid} onClick={() => this.redirect()}> \r\n                                <span className=\"text-white\">Submeter</span>       \r\n                            </Button>\r\n                            {participant_info.dashboard_sequence.length > 0 ? (\r\n                                <div>\r\n                                    {this.state.redirect ? (<Redirect to={{pathname:\"/admin/classDashboard_\" + participant_info.dashboard_sequence[0] + \"/7/345/32\"}}/>) : (<div></div>)}\r\n                                </div>\r\n                            ) : (\r\n                                <Redirect to={{pathname:\"/thanks\"}}/>\r\n                            )}\r\n                        </Col>\r\n                    </Form>\r\n                </div>  \r\n            ) : (\r\n                <Redirect to={{pathname: '/'}}/>\r\n            )        \r\n        )      \r\n    }\r\n}\r\nexport default DashboardQuestions;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Switch, Route,  Redirect } from 'react-router-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"assets/scss/paper-dashboard.scss?v=1.1.0\";\r\nimport \"assets/demo/demo.css\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\nimport \"sweetalert2/dist/sweetalert2.js\";\r\n\r\nimport AdminLayout from \"layouts/Admin.jsx\";\r\nimport ClassDashboard_1 from \"views/ClassDashboard/Dashboard_1/ClassDashboard.jsx\";\r\nimport ClassDashboard_2 from \"views/ClassDashboard/Dashboard_2/ClassDashboard.jsx\";\r\nimport ClassDashboard_3 from \"views/ClassDashboard/Dashboard_3/ClassDashboard.jsx\";\r\nimport StarterTerm from \"views/Terms/StarterTerm.jsx\";\r\nimport DemographicQuests from \"views/Terms/DemographicQuests.jsx\";\r\n//import FinalQuests from 'views/Terms/FinalQuests.jsx';\r\nimport Thanks from 'views/Terms/Thanks.jsx';\r\nimport ProjectTutorial from 'views/Terms/ProjectTutorial';\r\nimport DashboardQuestions from 'views/Terms/DashboardQuestions';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <Switch>\r\n        <Route exact path=\"/\" component = {StarterTerm}/>\r\n        <Route path=\"/demographicquest\" component = {DemographicQuests}/>\r\n        <Route path=\"/projecttutorial\" component = {ProjectTutorial}/>\r\n        <Route path=\"/admin\" component={ props=> <AdminLayout {...props} />}/>\r\n        <Route path=\"/admin/classdashboard_1\" render={props => <AdminLayout {...props} component={ClassDashboard_1}/>}/>\r\n        <Route path=\"/admin/classdashboard_2\" render={props => <AdminLayout {...props} component={ClassDashboard_2}/>}/>\r\n        <Route path=\"/admin/classdashboard_3\" render={props => <AdminLayout {...props} component={ClassDashboard_3}/>}/>\r\n        <Route path=\"/dashboardQuestions\" component={DashboardQuestions}/>\r\n        <Route path=\"/thanks\" component={Thanks}/>\r\n        <Redirect to=\"/\"/>\r\n    </Switch>\r\n</ BrowserRouter>, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}